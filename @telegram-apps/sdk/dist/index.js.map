{"version":3,"file":"index.js","sources":["../../transformers/dist/index.js","../src/classnames/classNames.ts","../src/classnames/mergeClassNames.ts","../../bridge/dist/index.js","../../navigation/dist/index.js","../../signals/dist/index.js","../src/scopes/globals.ts","../src/errors.ts","../src/scopes/toolkit/withIsSupported.ts","../src/scopes/toolkit/createWithIsSupported.ts","../src/utils/subAndCall.ts","../src/scopes/toolkit/createIsSupported.ts","../src/scopes/toolkit/withIsMounted.ts","../src/scopes/toolkit/createWithIsMounted.ts","../src/scopes/components/back-button/back-button.ts","../src/scopes/createMountFn.ts","../src/scopes/components/biometry/signals.ts","../src/scopes/components/biometry/eventToState.ts","../src/scopes/components/biometry/requestBiometry.ts","../src/scopes/components/biometry/methods.ts","../src/scopes/components/closing-behavior/closing-behavior.ts","../src/scopes/components/cloud-storage/cloud-storage.ts","../src/scopes/components/haptic-feedback/haptic-feedback.ts","../src/scopes/components/init-data/init-data.ts","../src/scopes/components/init-data/parseInitData.ts","../src/scopes/components/invoice/invoice.ts","../src/utils/isColorDark.ts","../src/scopes/components/theme-params/signals.ts","../src/scopes/components/main-button/signals.ts","../src/scopes/components/main-button/methods.ts","../src/scopes/components/theme-params/parseThemeParams.ts","../src/scopes/components/theme-params/methods.ts","../src/scopes/toolkit/withSupports.ts","../src/scopes/components/mini-app/signals.ts","../src/scopes/components/mini-app/methods.ts","../src/scopes/components/popup/prepareParams.ts","../src/scopes/components/popup/popup.ts","../src/scopes/components/qr-scanner/qr-scanner.ts","../src/scopes/components/secondary-button/signals.ts","../src/scopes/components/secondary-button/methods.ts","../src/scopes/components/settings-button/settings-button.ts","../src/scopes/components/swipe-behavior/swipe-behavior.ts","../src/scopes/components/viewport/signals.ts","../src/scopes/components/viewport/static.ts","../src/scopes/components/viewport/methods.ts","../src/scopes/utilities/links/links.ts","../src/scopes/utilities/privacy/privacy.ts","../src/scopes/utilities/uncategorized/uncategorized.ts","../src/utils/isSSR.ts","../src/init.ts"],"sourcesContent":["class i extends Error {\n  constructor(e, r, a) {\n    super(\n      typeof r == \"object\" ? r.message : r || e,\n      {\n        cause: typeof r == \"object\" ? r.cause : a\n      }\n    ), this.type = e, Object.setPrototypeOf(this, i.prototype);\n  }\n}\nfunction b(t) {\n  return t.replace(/[A-Z]/g, (e) => `_${e.toLowerCase()}`);\n}\nfunction E(t) {\n  return t.replace(/_[a-z]/g, (e) => e[1].toUpperCase());\n}\nconst R = \"ERR_INVALID_VALUE\", S = \"ERR_UNEXPECTED_VALUE\", w = \"ERR_UNEXPECTED_TYPE\", h = \"ERR_PARSE\";\nfunction y(t, e) {\n  const r = {};\n  for (const a in t) {\n    const n = t[a];\n    if (!n)\n      continue;\n    let o, c;\n    typeof n == \"function\" ? (o = a, c = n) : [o, c] = n;\n    try {\n      const p = c(e(o));\n      p !== void 0 && (r[a] = p);\n    } catch (p) {\n      throw new i(\n        h,\n        `Parser for \"${a}\" property failed${o === a ? \"\" : `. Source field: \"${o}\"`}`,\n        p\n      );\n    }\n  }\n  return r;\n}\nfunction d(t) {\n  let e = t;\n  if (typeof e == \"string\")\n    try {\n      e = JSON.parse(e);\n    } catch (r) {\n      throw new i(R, { cause: r });\n    }\n  if (typeof e != \"object\" || !e || Array.isArray(e))\n    throw new i(S);\n  return e;\n}\nfunction s(t, e) {\n  return (r) => {\n    const a = (n) => {\n      if (!(r && n === void 0))\n        try {\n          return e(n);\n        } catch (o) {\n          throw new i(h, {\n            message: `\"${t}\" transformer failed to parse the value`,\n            cause: o\n          });\n        }\n    };\n    return /* @__PURE__ */ Object.assign(\n      a,\n      {\n        isValid(n) {\n          try {\n            return a(n), !0;\n          } catch {\n            return !1;\n          }\n        }\n      }\n    );\n  };\n}\nfunction l(t, e) {\n  return s(e || \"object\", (r) => {\n    const a = d(r);\n    return y(t, (n) => a[n]);\n  });\n}\nfunction f(t) {\n  throw new i(w, `Unexpected value received: ${JSON.stringify(t)}`);\n}\nconst A = s(\"boolean\", (t) => {\n  if (typeof t == \"boolean\")\n    return t;\n  const e = String(t);\n  if (e === \"1\" || e === \"true\")\n    return !0;\n  if (e === \"0\" || e === \"false\")\n    return !1;\n  f(t);\n}), u = s(\"string\", (t) => {\n  if (typeof t == \"string\" || typeof t == \"number\")\n    return t.toString();\n  f(t);\n}), g = s(\"number\", (t) => {\n  if (typeof t == \"number\")\n    return t;\n  if (typeof t == \"string\") {\n    const e = Number(t);\n    if (!Number.isNaN(e))\n      return e;\n  }\n  f(t);\n}), D = s(\"date\", (t) => t instanceof Date ? t : new Date(g()(t) * 1e3));\nfunction P(t, e) {\n  return s(e || \"searchParams\", (r) => {\n    typeof r != \"string\" && !(r instanceof URLSearchParams) && f(r);\n    const a = typeof r == \"string\" ? new URLSearchParams(r) : r;\n    return y(t, (n) => {\n      const o = a.get(n);\n      return o === null ? void 0 : o;\n    });\n  });\n}\nfunction m(t) {\n  for (const e in t)\n    t[e] = [b(e), t[e]];\n  return t;\n}\nconst U = (t) => {\n  const e = g(), r = g(!0), a = u(), n = u(!0), o = A(!0), c = l(m({\n    addedToAttachmentMenu: o,\n    allowsWriteToPm: o,\n    firstName: a,\n    id: e,\n    isBot: o,\n    isPremium: o,\n    languageCode: n,\n    lastName: n,\n    photoUrl: n,\n    username: n\n  }), \"User\")(!0);\n  return P(\n    m({\n      authDate: D(),\n      canSendAfter: r,\n      chat: l(\n        m({\n          id: e,\n          type: a,\n          title: a,\n          photoUrl: n,\n          username: n\n        }),\n        \"Chat\"\n      )(!0),\n      chatInstance: n,\n      chatType: n,\n      hash: a,\n      queryId: n,\n      receiver: c,\n      startParam: n,\n      user: c\n    }),\n    \"initData\"\n  )(t);\n};\nfunction N(t) {\n  return /^#[\\da-f]{6}$/i.test(t);\n}\nfunction O(t) {\n  return /^#[\\da-f]{3}$/i.test(t);\n}\nfunction W(t) {\n  const e = t.replace(/\\s/g, \"\").toLowerCase();\n  if (N(e))\n    return e;\n  if (O(e)) {\n    let a = \"#\";\n    for (let n = 0; n < 3; n += 1)\n      a += e[1 + n].repeat(2);\n    return a;\n  }\n  const r = e.match(/^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/) || e.match(/^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),\\d{1,3}\\)$/);\n  if (!r)\n    throw new Error(`Value \"${t}\" does not satisfy any of known RGB formats.`);\n  return r.slice(1).reduce((a, n) => {\n    const o = parseInt(n, 10).toString(16);\n    return a + (o.length === 1 ? \"0\" : \"\") + o;\n  }, \"#\");\n}\nconst _ = s(\"rgb\", (t) => W(u()(t))), T = s(\n  \"themeParams\",\n  (t) => {\n    const e = _(!0);\n    return Object.entries(d(t)).reduce((r, [a, n]) => (r[E(a)] = e(n), r), {});\n  }\n);\n// @__NO_SIDE_EFFECTS__\nfunction V(t) {\n  return JSON.stringify(\n    Object.fromEntries(\n      Object.entries(t).map(([e, r]) => [b(e), r])\n    )\n  );\n}\nconst $ = (t) => {\n  const e = u(), r = u(!0), a = A(!0);\n  return P({\n    botInline: [\"tgWebAppBotInline\", a],\n    initData: [\"tgWebAppData\", U(!0)],\n    initDataRaw: [\"tgWebAppData\", r],\n    platform: [\"tgWebAppPlatform\", e],\n    showSettings: [\"tgWebAppShowSettings\", a],\n    startParam: [\"tgWebAppStartParam\", r],\n    themeParams: [\"tgWebAppThemeParams\", T()],\n    version: [\"tgWebAppVersion\", e]\n  }, \"launchParams\")(t);\n};\n// @__NO_SIDE_EFFECTS__\nfunction j(t) {\n  const { initDataRaw: e, startParam: r, showSettings: a, botInline: n } = t, o = new URLSearchParams();\n  return o.set(\"tgWebAppPlatform\", t.platform), o.set(\"tgWebAppThemeParams\", /* @__PURE__ */ V(t.themeParams)), o.set(\"tgWebAppVersion\", t.version), e && o.set(\"tgWebAppData\", e), r && o.set(\"tgWebAppStartParam\", r), typeof a == \"boolean\" && o.set(\"tgWebAppShowSettings\", a ? \"1\" : \"0\"), typeof n == \"boolean\" && o.set(\"tgWebAppBotInline\", n ? \"1\" : \"0\"), o.toString();\n}\nconst L = l({\n  eventType: u(),\n  eventData: (t) => t\n}, \"miniAppsMessage\");\nfunction I(t, e) {\n  return s(e || \"array\", (r) => {\n    let a;\n    if (Array.isArray(r))\n      a = r;\n    else if (typeof r == \"string\")\n      try {\n        const n = JSON.parse(r);\n        Array.isArray(n) && (a = n);\n      } catch {\n      }\n    return a || f(r), a.map(t);\n  });\n}\nconst C = s(\"fn\", (t) => {\n  if (typeof t == \"function\")\n    return t;\n  f(t);\n});\nfunction B(t) {\n  return !!t && typeof t == \"object\" && !Array.isArray(t);\n}\nexport {\n  R as ERR_INVALID_VALUE,\n  h as ERR_PARSE,\n  w as ERR_UNEXPECTED_TYPE,\n  S as ERR_UNEXPECTED_VALUE,\n  I as array,\n  A as boolean,\n  s as createTransformerGen,\n  D as date,\n  C as fn,\n  U as initData,\n  N as isRGB,\n  O as isRGBShort,\n  B as isRecord,\n  $ as launchParams,\n  L as miniAppsMessage,\n  g as number,\n  l as object,\n  _ as rgb,\n  P as searchParams,\n  j as serializeLaunchParams,\n  V as serializeThemeParams,\n  u as string,\n  T as themeParams,\n  W as toRGB,\n  d as toRecord\n};\n//# sourceMappingURL=index.js.map\n","import { isRecord } from '@telegram-apps/transformers';\n\n/**\n * Function which joins passed values with space following these rules:\n * 1. If value is non-empty string, it will be added to output.\n * 2. If value is object, only those keys will be added, which values are truthy.\n * 3. If value is array, classNames will be called with this value spread.\n * 4. All other values are ignored.\n *\n * You can find this function to similar one from the package {@link https://www.npmjs.com/package/classnames|classnames}.\n * @param values - values array.\n * @returns Final class name.\n */\nexport function classNames(...values: any[]): string {\n  return values\n    .map((value) => {\n      if (typeof value === 'string') {\n        return value;\n      }\n\n      if (isRecord(value)) {\n        return classNames(Object.entries(value).map((entry) => entry[1] && entry[0]));\n      }\n\n      if (Array.isArray(value)) {\n        return classNames(...value);\n      }\n    })\n    .filter(Boolean)\n    .join(' ');\n}\n","import { isRecord } from '@telegram-apps/transformers';\n\nimport { classNames } from './classNames.js';\n\ntype UnionStringKeys<U> = U extends U\n  ? { [K in keyof U]-?: U[K] extends string | undefined ? K : never }[keyof U]\n  : never;\n\ntype UnionRequiredKeys<U> = U extends U\n  ? { [K in UnionStringKeys<U>]: ({} extends Pick<U, K> ? never : K) }[UnionStringKeys<U>]\n  : never;\n\ntype UnionOptionalKeys<U> = Exclude<UnionStringKeys<U>, UnionRequiredKeys<U>>;\n\nexport type MergeClassNames<Tuple extends any[]> =\n// Removes all types from union that will be ignored by the mergeClassNames function.\n  Exclude<Tuple[number], number | string | null | undefined | any[] | boolean> extends infer Union\n    ?\n    & { [K in UnionRequiredKeys<Union>]: string; }\n    & { [K in UnionOptionalKeys<Union>]?: string; }\n    : never;\n\n/**\n * Merges two sets of classnames.\n *\n * The function expects to pass an array of objects with values that could be passed to\n * the `classNames` function.\n * @returns An object with keys from all objects with merged values.\n * @see classNames\n */\nexport function mergeClassNames<T extends any[]>(...partials: T): MergeClassNames<T> {\n  return partials.reduce<MergeClassNames<T>>((acc, partial) => {\n    if (isRecord(partial)) {\n      Object.entries(partial).forEach(([key, value]) => {\n        const className = classNames((acc as any)[key], value);\n        if (className) {\n          (acc as any)[key] = className;\n        }\n      });\n    }\n    return acc;\n  }, {} as MergeClassNames<T>);\n}\n","let v = class H extends Error {\n  constructor(t, n, r) {\n    super(\n      typeof n == \"object\" ? n.message : n || t,\n      {\n        cause: typeof n == \"object\" ? n.cause : r\n      }\n    ), this.type = t, Object.setPrototypeOf(this, H.prototype);\n  }\n};\nfunction G(e) {\n  return e.replace(/[A-Z]/g, (t) => `_${t.toLowerCase()}`);\n}\nfunction we(e) {\n  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());\n}\nconst he = \"ERR_INVALID_VALUE\", de = \"ERR_UNEXPECTED_VALUE\", me = \"ERR_UNEXPECTED_TYPE\", K = \"ERR_PARSE\";\nfunction V(e, t) {\n  const n = {};\n  for (const r in e) {\n    const o = e[r];\n    if (!o)\n      continue;\n    let s, a;\n    typeof o == \"function\" ? (s = r, a = o) : [s, a] = o;\n    try {\n      const i = a(t(s));\n      i !== void 0 && (n[r] = i);\n    } catch (i) {\n      throw new v(\n        K,\n        `Parser for \"${r}\" property failed${s === r ? \"\" : `. Source field: \"${s}\"`}`,\n        i\n      );\n    }\n  }\n  return n;\n}\nfunction Z(e) {\n  let t = e;\n  if (typeof t == \"string\")\n    try {\n      t = JSON.parse(t);\n    } catch (n) {\n      throw new v(he, { cause: n });\n    }\n  if (typeof t != \"object\" || !t || Array.isArray(t))\n    throw new v(de);\n  return t;\n}\nfunction g(e, t) {\n  return (n) => {\n    const r = (o) => {\n      if (!(n && o === void 0))\n        try {\n          return t(o);\n        } catch (s) {\n          throw new v(K, {\n            message: `\"${e}\" transformer failed to parse the value`,\n            cause: s\n          });\n        }\n    };\n    return /* @__PURE__ */ Object.assign(\n      r,\n      {\n        isValid(o) {\n          try {\n            return r(o), !0;\n          } catch {\n            return !1;\n          }\n        }\n      }\n    );\n  };\n}\nfunction l(e, t) {\n  return g(t || \"object\", (n) => {\n    const r = Z(n);\n    return V(e, (o) => r[o]);\n  });\n}\nfunction R(e) {\n  throw new v(me, `Unexpected value received: ${JSON.stringify(e)}`);\n}\nconst $ = g(\"boolean\", (e) => {\n  if (typeof e == \"boolean\")\n    return e;\n  const t = String(e);\n  if (t === \"1\" || t === \"true\")\n    return !0;\n  if (t === \"0\" || t === \"false\")\n    return !1;\n  R(e);\n}), _ = g(\"string\", (e) => {\n  if (typeof e == \"string\" || typeof e == \"number\")\n    return e.toString();\n  R(e);\n}), P = g(\"number\", (e) => {\n  if (typeof e == \"number\")\n    return e;\n  if (typeof e == \"string\") {\n    const t = Number(e);\n    if (!Number.isNaN(t))\n      return t;\n  }\n  R(e);\n}), Ee = g(\"date\", (e) => e instanceof Date ? e : new Date(P()(e) * 1e3));\nfunction z(e, t) {\n  return g(t || \"searchParams\", (n) => {\n    typeof n != \"string\" && !(n instanceof URLSearchParams) && R(n);\n    const r = typeof n == \"string\" ? new URLSearchParams(n) : n;\n    return V(e, (o) => {\n      const s = r.get(o);\n      return s === null ? void 0 : s;\n    });\n  });\n}\nfunction U(e) {\n  for (const t in e)\n    e[t] = [G(t), e[t]];\n  return e;\n}\nconst ye = (e) => {\n  const t = P(), n = P(!0), r = _(), o = _(!0), s = $(!0), a = l(U({\n    addedToAttachmentMenu: s,\n    allowsWriteToPm: s,\n    firstName: r,\n    id: t,\n    isBot: s,\n    isPremium: s,\n    languageCode: o,\n    lastName: o,\n    photoUrl: o,\n    username: o\n  }), \"User\")(!0);\n  return z(\n    U({\n      authDate: Ee(),\n      canSendAfter: n,\n      chat: l(\n        U({\n          id: t,\n          type: r,\n          title: r,\n          photoUrl: o,\n          username: o\n        }),\n        \"Chat\"\n      )(!0),\n      chatInstance: o,\n      chatType: o,\n      hash: r,\n      queryId: o,\n      receiver: a,\n      startParam: o,\n      user: a\n    }),\n    \"initData\"\n  )(e);\n};\nfunction ve(e) {\n  return /^#[\\da-f]{6}$/i.test(e);\n}\nfunction Pe(e) {\n  return /^#[\\da-f]{3}$/i.test(e);\n}\nfunction Re(e) {\n  const t = e.replace(/\\s/g, \"\").toLowerCase();\n  if (ve(t))\n    return t;\n  if (Pe(t)) {\n    let r = \"#\";\n    for (let o = 0; o < 3; o += 1)\n      r += t[1 + o].repeat(2);\n    return r;\n  }\n  const n = t.match(/^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/) || t.match(/^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),\\d{1,3}\\)$/);\n  if (!n)\n    throw new Error(`Value \"${e}\" does not satisfy any of known RGB formats.`);\n  return n.slice(1).reduce((r, o) => {\n    const s = parseInt(o, 10).toString(16);\n    return r + (s.length === 1 ? \"0\" : \"\") + s;\n  }, \"#\");\n}\nconst Te = g(\"rgb\", (e) => Re(_()(e))), Se = g(\n  \"themeParams\",\n  (e) => {\n    const t = Te(!0);\n    return Object.entries(Z(e)).reduce((n, [r, o]) => (n[we(r)] = t(o), n), {});\n  }\n);\n// @__NO_SIDE_EFFECTS__\nfunction X(e) {\n  return JSON.stringify(\n    Object.fromEntries(\n      Object.entries(e).map(([t, n]) => [G(t), n])\n    )\n  );\n}\nconst Ae = (e) => {\n  const t = _(), n = _(!0), r = $(!0);\n  return z({\n    botInline: [\"tgWebAppBotInline\", r],\n    initData: [\"tgWebAppData\", ye(!0)],\n    initDataRaw: [\"tgWebAppData\", n],\n    platform: [\"tgWebAppPlatform\", t],\n    showSettings: [\"tgWebAppShowSettings\", r],\n    startParam: [\"tgWebAppStartParam\", n],\n    themeParams: [\"tgWebAppThemeParams\", Se()],\n    version: [\"tgWebAppVersion\", t]\n  }, \"launchParams\")(e);\n};\n// @__NO_SIDE_EFFECTS__\nfunction $e(e) {\n  const { initDataRaw: t, startParam: n, showSettings: r, botInline: o } = e, s = new URLSearchParams();\n  return s.set(\"tgWebAppPlatform\", e.platform), s.set(\"tgWebAppThemeParams\", /* @__PURE__ */ X(e.themeParams)), s.set(\"tgWebAppVersion\", e.version), t && s.set(\"tgWebAppData\", t), n && s.set(\"tgWebAppStartParam\", n), typeof r == \"boolean\" && s.set(\"tgWebAppShowSettings\", r ? \"1\" : \"0\"), typeof o == \"boolean\" && s.set(\"tgWebAppBotInline\", o ? \"1\" : \"0\"), s.toString();\n}\nconst Y = l({\n  eventType: _(),\n  eventData: (e) => e\n}, \"miniAppsMessage\"), Q = g(\"fn\", (e) => {\n  if (typeof e == \"function\")\n    return e;\n  R(e);\n});\nfunction Ne(e) {\n  return !!e && typeof e == \"object\" && !Array.isArray(e);\n}\nconst Ce = l({\n  TelegramWebviewProxy: l({ postEvent: Q() })()\n});\nfunction ee(e) {\n  return Ce().isValid(e);\n}\nfunction De() {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return !0;\n  }\n}\nvar Ue = Object.defineProperty, je = (e, t, n) => t in e ? Ue(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n, te = (e, t, n) => je(e, typeof t != \"symbol\" ? t + \"\" : t, n);\nclass b extends Error {\n  constructor(t, n, r) {\n    super(\n      typeof n == \"object\" ? n.message : n || t,\n      {\n        cause: typeof n == \"object\" ? n.cause : r\n      }\n    ), this.type = t, Object.setPrototypeOf(this, b.prototype);\n  }\n}\nfunction x(e, t, n) {\n  return e.addEventListener(t, n), () => e.removeEventListener(t, n);\n}\nfunction L(...e) {\n  const t = e.flat(1);\n  return [\n    t.push.bind(t),\n    () => {\n      t.forEach((n) => {\n        n();\n      });\n    }\n  ];\n}\nfunction xe(e, t) {\n  return e instanceof b && e.type === t;\n}\nfunction W(e) {\n  return (t) => xe(t, e);\n}\nconst ne = \"ERR_ABORTED\", re = \"ERR_CANCELED\", oe = \"ERR_TIMED_OUT\";\nfunction M(e) {\n  return new b(ne, { cause: e });\n}\nconst ot = W(oe), st = W(ne), at = W(re);\nfunction q(e, t) {\n  return e.reject = t.reject, e;\n}\nclass w extends Promise {\n  constructor(t, n) {\n    let r, o;\n    typeof t == \"function\" ? (r = t, o = n) : o = t;\n    let s, a;\n    super((i, c) => {\n      o || (o = {});\n      const { abortSignal: u } = o;\n      if (u && u.aborted)\n        return c(M(u.reason));\n      const [f, h] = L(), d = (m) => (...ge) => (h(), m(...ge)), T = new AbortController(), { signal: S } = T;\n      a = d((m) => {\n        T.abort(m), c(m);\n      }), s = d(i), u && f(\n        x(u, \"abort\", () => {\n          a(M(u.reason));\n        })\n      );\n      const { timeout: D } = o;\n      if (D) {\n        const m = setTimeout(() => {\n          a(new b(oe, `Timeout reached: ${D}ms`));\n        }, D);\n        f(() => {\n          clearTimeout(m);\n        });\n      }\n      r && r(s, a, S);\n    }), te(this, \"reject\"), this.reject = a;\n  }\n  /**\n   * Creates a new BetterPromise instance using executor, resolving promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static withFn(t, n) {\n    return new w((r, o, s) => {\n      try {\n        const a = t(s);\n        return a instanceof Promise ? a.then(r, o) : r(a);\n      } catch (a) {\n        o(a);\n      }\n    }, n);\n  }\n  /**\n   * @see Promise.resolve\n   */\n  static resolve(t) {\n    return new w((n) => {\n      n(t);\n    });\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new w((n, r) => {\n      r(t);\n    });\n  }\n  /**\n   * Cancels the promise execution.\n   */\n  cancel() {\n    this.reject(new b(re));\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return q(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return q(super.then(t, n), this);\n  }\n}\nfunction F(e, t) {\n  return e.resolve = t.resolve, e;\n}\nclass A extends w {\n  constructor(t, n) {\n    let r, o;\n    typeof t == \"function\" ? (r = t, o = n) : o = t;\n    let s;\n    super((a, i, c) => {\n      s = a, r && r(a, i, c);\n    }, o), te(this, \"resolve\"), this.resolve = s;\n  }\n  /**\n   * Creates a new EnhancedPromise instance using executor, resolving promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static withFn(t, n) {\n    return new A(\n      (r, o, s) => w.withFn(t, { abortSignal: s }).then(r, o),\n      n\n    );\n  }\n  /**\n   * @see Promise.resolve\n   */\n  static resolve(t) {\n    return new A((n) => {\n      n(t);\n    });\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new A((n, r) => {\n      r(t);\n    });\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return F(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return F(super.then(t, n), this);\n  }\n}\nfunction it(e, t) {\n  return new w((n) => {\n    setTimeout(n, e);\n  }, { abortSignal: t });\n}\nfunction se(e) {\n  return `tapps/${e}`;\n}\nfunction ke(e, t) {\n  sessionStorage.setItem(se(e), JSON.stringify(t));\n}\nfunction Le(e) {\n  const t = sessionStorage.getItem(se(e));\n  try {\n    return t ? JSON.parse(t) : void 0;\n  } catch {\n  }\n}\nfunction ct(e) {\n  return e.replace(/[A-Z]/g, (t) => `-${t.toLowerCase()}`);\n}\nfunction ut(e) {\n  return e.replace(/[A-Z]/g, (t) => `_${t.toLowerCase()}`);\n}\nfunction pt(e) {\n  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());\n}\n// @__NO_SIDE_EFFECTS__\nfunction We(e, t) {\n  t || (t = {});\n  const {\n    textColor: n,\n    bgColor: r,\n    shouldLog: o = !0\n  } = t;\n  function s(a, ...i) {\n    if (!o || typeof o == \"function\" && !o())\n      return;\n    const c = \"font-weight:bold;padding:0 5px;border-radius:5px\";\n    console[a](\n      `%c${Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n        fractionalSecondDigits: 3,\n        timeZone: \"UTC\"\n      }).format(/* @__PURE__ */ new Date())}%c / %c${e}`,\n      `${c};background-color: lightblue;color:black`,\n      \"\",\n      `${c};${n ? `color:${n};` : \"\"}${r ? `background-color:${r}` : \"\"}`,\n      ...i\n    );\n  }\n  return [\n    function(...a) {\n      s(\"log\", ...a);\n    },\n    function(...a) {\n      s(\"error\", ...a);\n    }\n  ];\n}\nfunction ft(e, t) {\n  document.documentElement.style.setProperty(e, t);\n}\nfunction _t(e) {\n  document.documentElement.style.removeProperty(e);\n}\nfunction Oe(e, t) {\n  t();\n}\n// @__NO_SIDE_EFFECTS__\nfunction E(e, t) {\n  t || (t = {});\n  const n = t.equals || Object.is;\n  let r = [], o = e;\n  const s = (u) => {\n    if (!n(o, u)) {\n      const f = o;\n      o = u, Oe(c, () => {\n        [...r].forEach(([h, d]) => {\n          h(u, f), d && i(h, !0);\n        });\n      });\n    }\n  };\n  function a(u) {\n    const f = typeof u != \"object\" ? { once: u } : u;\n    return {\n      once: f.once || !1,\n      signal: f.signal || !1\n    };\n  }\n  const i = (u, f) => {\n    const h = a(f), d = r.findIndex(([T, S]) => T === u && S.once === h.once && S.signal === h.signal);\n    d >= 0 && r.splice(d, 1);\n  }, c = Object.assign(\n    function() {\n      return Ie(c), o;\n    },\n    {\n      destroy() {\n        r = [];\n      },\n      set: s,\n      reset() {\n        s(e);\n      },\n      sub(u, f) {\n        return r.push([u, a(f)]), () => i(u, f);\n      },\n      unsub: i,\n      unsubAll() {\n        r = r.filter((u) => u[1].signal);\n      }\n    }\n  );\n  return c;\n}\nconst j = [];\nfunction Ie(e) {\n  j.length && j[j.length - 1].add(e);\n}\nconst ae = /* @__PURE__ */ E(!1), [O, Me] = /* @__PURE__ */ We(\"Bridge\", {\n  bgColor: \"#9147ff\",\n  textColor: \"white\",\n  shouldLog: ae\n}), qe = {\n  clipboard_text_received: l({\n    req_id: _(),\n    data: (e) => e === null ? e : _(!0)(e)\n  }, \"clipboard_text_received\"),\n  custom_method_invoked: l({\n    req_id: _(),\n    result: (e) => e,\n    error: _(!0)\n  }, \"custom_method_invoked\"),\n  popup_closed: g(\"popup_closed\", (e) => e ? l({\n    button_id: (t) => t == null ? void 0 : _()(t)\n  })()(e) : {}),\n  viewport_changed: l({\n    height: P(),\n    width: (e) => e == null ? window.innerWidth : P()(e),\n    is_state_stable: $(),\n    is_expanded: $()\n  }, \"viewport_changed\")\n};\nfunction Fe(e) {\n  const t = window, [, n] = L(\n    // Add \"resize\" event listener to make sure, we always have fresh viewport information.\n    // The desktop version of Telegram is sometimes not sending the \"viewport_changed\"\n    // event. For example, when the Main Button is shown. That's why we should\n    // add our own listener to make sure viewport information is always fresh.\n    // Issue: https://github.com/Telegram-Mini-Apps/telegram-apps/issues/10\n    x(t, \"resize\", () => {\n      e([\"viewport_changed\", {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        is_state_stable: !0,\n        is_expanded: !0\n      }]);\n    }),\n    // Add listener, which handles events sent from the Telegram web application and also events\n    // generated by the local emitEvent function.\n    x(t, \"message\", (r) => {\n      if (r.source !== t.parent)\n        return;\n      let o;\n      try {\n        o = Y()(r.data);\n      } catch {\n        return;\n      }\n      const { eventType: s, eventData: a } = o, i = qe[s];\n      try {\n        const c = i ? i()(a) : a;\n        O(\"Event received:\", c ? { eventType: s, eventData: c } : { eventType: s }), e([s, c]);\n      } catch (c) {\n        Me(\n          [\n            `An error occurred processing the \"${s}\" event from the Telegram application.`,\n            \"Please, file an issue here:\",\n            \"https://github.com/Telegram-Mini-Apps/telegram-apps/issues/new/choose\"\n          ].join(`\n`),\n          o,\n          c\n        );\n      }\n    })\n  );\n  return n;\n}\nconst N = /* @__PURE__ */ E(), C = /* @__PURE__ */ E();\nfunction ie() {\n  return C() || C.set(Fe(N.set)), N;\n}\nconst y = /* @__PURE__ */ E({});\nfunction ce(e) {\n  let t = y()[e];\n  return t || (t = /* @__PURE__ */ E(void 0, {\n    equals() {\n      return !1;\n    }\n  }), ie().sub((n) => {\n    n && n[0] === e && t.set(n[1]);\n  }), y.set({ ...y(), [e]: t })), t;\n}\nfunction Je(e, t, n) {\n  return ce(e).sub(t, n);\n}\nconst Be = \"ERR_METHOD_UNSUPPORTED\", He = \"ERR_RETRIEVE_LP_FAILED\", Ge = \"ERR_METHOD_PARAMETER_UNSUPPORTED\", Ke = \"ERR_UNKNOWN_ENV\", Ve = \"ERR_INVOKE_CUSTOM_METHOD_RESPONSE\", ue = /* @__PURE__ */ E(\"https://web.telegram.org\");\nfunction pe(e, t) {\n  O(\"Posting event:\", t ? { eventType: e, eventData: t } : { eventType: e });\n  const n = window;\n  if (ee(n)) {\n    n.TelegramWebviewProxy.postEvent(e, JSON.stringify(t));\n    return;\n  }\n  const r = JSON.stringify({ eventType: e, eventData: t });\n  if (De())\n    return n.parent.postMessage(r, ue());\n  const { external: o } = n;\n  if (l({ notify: Q() })().isValid(o)) {\n    o.notify(r);\n    return;\n  }\n  throw new b(Ke);\n}\nfunction fe(e, t, n) {\n  n || (n = {});\n  const { capture: r } = n, [o, s] = L();\n  return new w((a) => {\n    (Array.isArray(t) ? t : [t]).forEach((i) => {\n      o(\n        Je(i, (c) => {\n          (!r || (Array.isArray(t) ? r({\n            event: i,\n            payload: c\n          }) : r(c))) && a(c);\n        })\n      );\n    }), (n.postEvent || pe)(e, n.params);\n  }, n).finally(s);\n}\nfunction I(e) {\n  return Ae()(e);\n}\nfunction _e(e) {\n  return I(\n    e.replace(/^[^?#]*[?#]/, \"\").replace(/[?#]/g, \"&\")\n  );\n}\nfunction Ze() {\n  return _e(window.location.href);\n}\nfunction ze() {\n  const e = performance.getEntriesByType(\"navigation\")[0];\n  if (!e)\n    throw new Error(\"Unable to get first navigation entry.\");\n  return _e(e.name);\n}\nconst Xe = \"launchParams\";\nfunction Ye() {\n  return I(Le(Xe) || \"\");\n}\nfunction le(e) {\n  ke(\"launchParams\", /* @__PURE__ */ $e(e));\n}\nfunction be(e) {\n  return e instanceof Error ? e.message + (e.cause ? `\n  ${be(e.cause)}` : \"\") : JSON.stringify(e);\n}\nfunction Qe() {\n  const e = [];\n  for (const t of [\n    // Try to retrieve launch parameters from the current location. This method can return\n    // nothing in case, location was changed, and then the page was reloaded.\n    Ze,\n    // Then, try using the lower level API - window.performance.\n    ze,\n    // Finally, try to extract launch parameters from the session storage.\n    Ye\n  ])\n    try {\n      const n = t();\n      return le(n), n;\n    } catch (n) {\n      e.push(n);\n    }\n  throw new b(He, [\n    \"Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?\",\n    \"📖 Refer to docs for more information:\",\n    \"https://docs.telegram-mini-apps.com/packages/telegram-apps-sdk/environment\",\n    \"Collected errors:\",\n    ...e.map((t) => `— ${be(t)}`)\n  ].join(`\n`));\n}\nfunction lt(e) {\n  if (e === \"simple\")\n    try {\n      return Qe(), !0;\n    } catch {\n      return !1;\n    }\n  return w.withFn(async () => {\n    if (ee(window))\n      return !0;\n    try {\n      return await fe(\"web_app_request_theme\", \"theme_changed\", { timeout: 100 }), !0;\n    } catch {\n      return !1;\n    }\n  }, e);\n}\nfunction k(e, t) {\n  window.dispatchEvent(new MessageEvent(\"message\", {\n    data: JSON.stringify({ eventType: e, eventData: t }),\n    // We specify window.parent to imitate the case, the parent iframe sent us this event.\n    source: window.parent\n  }));\n}\nfunction et(e, t) {\n  if (typeof t == \"string\")\n    try {\n      const { eventType: n } = Y()(t);\n      n === \"web_app_request_theme\" && k(\"theme_changed\", {\n        theme_params: JSON.parse(/* @__PURE__ */ X(e))\n      }), n === \"web_app_request_viewport\" && k(\"viewport_changed\", {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        is_state_stable: !0,\n        is_expanded: !0\n      });\n    } catch {\n    }\n}\nfunction bt(e) {\n  var r;\n  const t = typeof e == \"string\" ? I(e) : e;\n  le(t);\n  const n = (r = window.TelegramWebviewProxy) == null ? void 0 : r.postEvent;\n  window.TelegramWebviewProxy = {\n    postEvent(o, s) {\n      et(t.themeParams, JSON.stringify({ eventType: o, eventData: s })), n == null || n(o, s);\n    }\n  }, O(\"Environment was mocked by the mockTelegramEnv function\");\n}\nfunction gt() {\n  [\n    [\"TelegramGameProxy_receiveEvent\"],\n    // Windows Phone.\n    [\"TelegramGameProxy\", \"receiveEvent\"],\n    // Desktop.\n    [\"Telegram\", \"WebView\", \"receiveEvent\"]\n    // Android and iOS.\n  ].forEach((e) => {\n    let t = window;\n    e.forEach((n, r, o) => {\n      if (r === o.length - 1) {\n        t[n] = k;\n        return;\n      }\n      n in t || (t[n] = {}), t = t[n];\n    });\n  });\n}\nfunction wt() {\n  [\"TelegramGameProxy_receiveEvent\", \"TelegramGameProxy\", \"Telegram\"].forEach((e) => {\n    delete window[e];\n  });\n}\nfunction ht(e, t, n) {\n  ce(e).unsub(t, n);\n}\nfunction dt(e, t) {\n  return ie().sub(e, t);\n}\nfunction mt(e, t) {\n  N.unsub(e, t);\n}\nfunction tt(e) {\n  return ({ req_id: t }) => t === e;\n}\nfunction J(e) {\n  return e.split(\".\").map(Number);\n}\nfunction nt(e, t) {\n  const n = J(e), r = J(t), o = Math.max(n.length, r.length);\n  for (let s = 0; s < o; s += 1) {\n    const a = n[s] || 0, i = r[s] || 0;\n    if (a !== i)\n      return a > i ? 1 : -1;\n  }\n  return 0;\n}\nfunction p(e, t) {\n  return nt(e, t) <= 0;\n}\nfunction B(e, t, n) {\n  if (typeof n == \"string\") {\n    if (e === \"web_app_open_link\") {\n      if (t === \"try_instant_view\")\n        return p(\"6.4\", n);\n      if (t === \"try_browser\")\n        return p(\"7.6\", n);\n    }\n    if (e === \"web_app_set_header_color\" && t === \"color\")\n      return p(\"6.9\", n);\n    if (e === \"web_app_close\" && t === \"return_back\")\n      return p(\"7.6\", n);\n    if (e === \"web_app_setup_main_button\" && t === \"has_shine_effect\")\n      return p(\"7.10\", n);\n  }\n  switch (e) {\n    case \"web_app_open_tg_link\":\n    case \"web_app_open_invoice\":\n    case \"web_app_setup_back_button\":\n    case \"web_app_set_background_color\":\n    case \"web_app_set_header_color\":\n    case \"web_app_trigger_haptic_feedback\":\n      return p(\"6.1\", t);\n    case \"web_app_open_popup\":\n      return p(\"6.2\", t);\n    case \"web_app_close_scan_qr_popup\":\n    case \"web_app_open_scan_qr_popup\":\n    case \"web_app_read_text_from_clipboard\":\n      return p(\"6.4\", t);\n    case \"web_app_switch_inline_query\":\n      return p(\"6.7\", t);\n    case \"web_app_invoke_custom_method\":\n    case \"web_app_request_write_access\":\n    case \"web_app_request_phone\":\n      return p(\"6.9\", t);\n    case \"web_app_setup_settings_button\":\n      return p(\"6.10\", t);\n    case \"web_app_biometry_get_info\":\n    case \"web_app_biometry_open_settings\":\n    case \"web_app_biometry_request_access\":\n    case \"web_app_biometry_request_auth\":\n    case \"web_app_biometry_update_token\":\n      return p(\"7.2\", t);\n    case \"web_app_setup_swipe_behavior\":\n      return p(\"7.7\", t);\n    case \"web_app_share_to_story\":\n      return p(\"7.8\", t);\n    case \"web_app_setup_secondary_button\":\n    case \"web_app_set_bottom_bar_color\":\n      return p(\"7.10\", t);\n    default:\n      return [\n        \"iframe_ready\",\n        \"iframe_will_reload\",\n        \"web_app_close\",\n        \"web_app_data_send\",\n        \"web_app_expand\",\n        \"web_app_open_link\",\n        \"web_app_ready\",\n        \"web_app_request_theme\",\n        \"web_app_request_viewport\",\n        \"web_app_setup_main_button\",\n        \"web_app_setup_closing_behavior\"\n      ].includes(e);\n  }\n}\nfunction Et(e, t) {\n  t || (t = \"strict\");\n  const n = typeof t == \"function\" ? t : (r) => {\n    const { method: o, version: s } = r;\n    let a, i;\n    if (\"param\" in r ? (a = `Parameter \"${r.param}\" of \"${o}\" method is unsupported in Mini Apps version ${s}`, i = Ge) : (a = `Method \"${o}\" is unsupported in Mini Apps version ${s}`, i = Be), t === \"strict\")\n      throw new b(i, a);\n    return console.warn(a);\n  };\n  return (r, o) => B(r, e) ? Ne(o) && r === \"web_app_set_header_color\" && \"color\" in o && !B(r, \"color\", e) ? n({ version: e, method: r, param: \"color\" }) : pe(r, o) : n({ version: e, method: r });\n}\nfunction yt(e, t, n, r) {\n  return fe(\"web_app_invoke_custom_method\", \"custom_method_invoked\", {\n    ...r || {},\n    params: { method: e, params: t, req_id: n },\n    capture: tt(n)\n  }).then(({ result: o, error: s }) => {\n    if (s)\n      throw new b(Ve, s);\n    return o;\n  });\n}\nfunction rt(e) {\n  e.unsubAll(), e.reset();\n}\nfunction vt() {\n  var e;\n  (e = C()) == null || e(), [\n    ...Object.values(y()),\n    y,\n    N,\n    C,\n    ue,\n    ae\n  ].forEach(rt);\n}\nexport {\n  ae as $debug,\n  ue as $targetOrigin,\n  w as CancelablePromise,\n  ne as ERR_ABORTED,\n  re as ERR_CANCELED,\n  Ve as ERR_CUSTOM_METHOD_ERR_RESPONSE,\n  Ge as ERR_METHOD_PARAMETER_UNSUPPORTED,\n  Be as ERR_METHOD_UNSUPPORTED,\n  He as ERR_RETRIEVE_LP_FAILED,\n  oe as ERR_TIMED_OUT,\n  Ke as ERR_UNKNOWN_ENV,\n  A as EnhancedPromise,\n  b as TypedError,\n  x as addEventListener,\n  ct as camelToKebab,\n  ut as camelToSnake,\n  tt as captureSameReq,\n  nt as compareVersions,\n  M as createAbortError,\n  L as createCbCollector,\n  We as createLogger,\n  Et as createPostEvent,\n  W as createTypedErrorPredicate,\n  gt as defineEventHandlers,\n  _t as deleteCssVar,\n  k as emitMiniAppsEvent,\n  Le as getStorageValue,\n  ee as hasWebviewProxy,\n  yt as invokeCustomMethod,\n  st as isAbortError,\n  at as isCanceledError,\n  De as isIframe,\n  lt as isTMA,\n  ot as isTimeoutError,\n  bt as mockTelegramEnv,\n  ht as off,\n  Je as on,\n  pe as postEvent,\n  wt as removeEventHandlers,\n  fe as request,\n  vt as resetPackageState,\n  Qe as retrieveLaunchParams,\n  ft as setCssVar,\n  ke as setStorageValue,\n  it as sleep,\n  pt as snakeToCamel,\n  dt as subscribe,\n  B as supports,\n  mt as unsubscribe\n};\n//# sourceMappingURL=index.js.map\n","function i() {\n  return performance.getEntriesByType(\"navigation\")[0];\n}\nfunction c() {\n  const t = i();\n  return !!t && t.type === \"reload\";\n}\nfunction o(t, n) {\n  return t.startsWith(n) ? t : `${n}${t}`;\n}\nfunction R(t) {\n  return new URL(\n    typeof t == \"string\" ? t : [\n      t.pathname || \"\",\n      o(t.search || \"\", \"?\"),\n      o(t.hash || \"\", \"#\")\n    ].join(\"\"),\n    \"http://a\"\n  );\n}\nfunction a(t) {\n  const n = (typeof t == \"string\" ? t : t.pathname || \"\").startsWith(\"/\"), e = R(t), { pathname: s } = e;\n  return `${n ? s : s.slice(1)}${e.search}${e.hash}`;\n}\nconst r = \"ERR_NAVIGATION_HISTORY_EMPTY\", I = \"ERR_NAVIGATION_CURSOR_INVALID\";\nexport {\n  I as ERR_CURSOR_INVALID,\n  r as ERR_HISTORY_EMPTY,\n  R as createSafeURL,\n  o as ensurePrefix,\n  i as getFirstNavigationEntry,\n  c as isPageReload,\n  a as urlToPath\n};\n//# sourceMappingURL=index.js.map\n","let i;\nfunction y(e, s) {\n  i && i.set(e, s) || s();\n}\nfunction m(e) {\n  if (i)\n    return e();\n  i = /* @__PURE__ */ new Map();\n  try {\n    e();\n  } finally {\n    i.forEach((s) => s()), i = void 0;\n  }\n}\n// @__NO_SIDE_EFFECTS__\nfunction S(e, s) {\n  s || (s = {});\n  const d = s.equals || Object.is;\n  let n = [], c = e;\n  const a = (t) => {\n    if (!d(c, t)) {\n      const u = c;\n      c = t, y(l, () => {\n        [...n].forEach(([f, g]) => {\n          f(t, u), g && r(f, !0);\n        });\n      });\n    }\n  };\n  function o(t) {\n    const u = typeof t != \"object\" ? { once: t } : t;\n    return {\n      once: u.once || !1,\n      signal: u.signal || !1\n    };\n  }\n  const r = (t, u) => {\n    const f = o(u), g = n.findIndex(([h, p]) => h === t && p.once === f.once && p.signal === f.signal);\n    g >= 0 && n.splice(g, 1);\n  }, l = Object.assign(\n    function() {\n      return j(l), c;\n    },\n    {\n      destroy() {\n        n = [];\n      },\n      set: a,\n      reset() {\n        a(e);\n      },\n      sub(t, u) {\n        return n.push([t, o(u)]), () => r(t, u);\n      },\n      unsub: r,\n      unsubAll() {\n        n = n.filter((t) => t[1].signal);\n      }\n    }\n  );\n  return l;\n}\nconst b = [];\nfunction j(e) {\n  b.length && b[b.length - 1].add(e);\n}\n// @__NO_SIDE_EFFECTS__\nfunction x(e, s) {\n  let d = /* @__PURE__ */ new Set();\n  const n = /* @__PURE__ */ S(a(), s);\n  function c() {\n    n.set(a());\n  }\n  function a() {\n    d.forEach((l) => l.unsub(c, { signal: !0 }));\n    const o = /* @__PURE__ */ new Set();\n    let r;\n    b.push(o);\n    try {\n      r = e();\n    } finally {\n      b.pop();\n    }\n    return o.forEach((l) => {\n      l.sub(c, { signal: !0 });\n    }), d = o, r;\n  }\n  return Object.assign(function() {\n    return n();\n  }, {\n    destroy: n.destroy,\n    sub: n.sub,\n    unsub: n.unsub,\n    unsubAll: n.unsubAll\n  });\n}\nexport {\n  m as batch,\n  x as computed,\n  S as signal\n};\n//# sourceMappingURL=index.js.map\n","import {\n  retrieveLaunchParams,\n  postEvent as _postEvent,\n  request as _request,\n  invokeCustomMethod as _invokeCustomMethod,\n  createPostEvent,\n  type PostEventFn,\n  type Version,\n  type RequestFn,\n  type CancelablePromise,\n  type ExecuteWithOptions,\n  type CustomMethodParams,\n  type CustomMethodName,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nexport interface ConfigureOptions {\n  /**\n   * A maximum supported Mini Apps version.\n   * @default Being extracted using the `retrieveLaunchParams` function.\n   * @see retrieveLaunchParams\n   */\n  version?: Version;\n  /**\n   * Custom postEvent function.\n   *\n   * Passing the \"strict\" value creates a function, which always checks if specified call supported\n   * by currently supported Mini Apps version. If the method is unsupported, an error will be\n   * thrown.\n   *\n   * Passing the \"non-strict\" value creates a postEvent function not throwing any errors, but\n   * warning about a missing method support.\n   *\n   * @default 'strict'\n   * @see createPostEvent\n   */\n  postEvent?: PostEventFn;\n}\n\n/**\n * Signal with a request identifier generator. Usually, you don't need to set this value manually.\n */\nexport const $createRequestId = signal((() => {\n  let requestId = 0;\n  return () => (requestId += 1).toString();\n})());\n\n/**\n * Signal with a currently used postEvent function across the package.\n */\nexport const $postEvent = signal<PostEventFn>(_postEvent);\n\n/**\n * Signal with a currently supported maximum Mini Apps version. This value is usually set via\n */\nexport const $version = signal<Version>('0.0');\n\n/**\n * Configures package global dependencies.\n * @param options - configuration additional options.\n */\nexport function configure(options?: ConfigureOptions): void {\n  options ||= {};\n  const { postEvent: optionsPostEvent } = options;\n  const v = options.version || retrieveLaunchParams().version;\n  $version.set(v);\n  $postEvent.set(\n    typeof optionsPostEvent === 'function'\n      ? optionsPostEvent\n      : createPostEvent(v),\n  );\n}\n\n/**\n * Creates a new request id.\n */\nexport function createRequestId(): string {\n  return $createRequestId()();\n}\n\n/**\n * Invokes known custom method. Returns method execution result.\n * @param method - method name.\n * @param params - method parameters.\n * @param options - additional options.\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n */\nexport function invokeCustomMethod<M extends CustomMethodName>(\n  method: M,\n  params: CustomMethodParams<M>,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown>;\n\n/**\n * Invokes unknown custom method. Returns method execution result.\n * @param method - method name.\n * @param params - method parameters.\n * @param options - additional options.\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n */\nexport function invokeCustomMethod(\n  method: string,\n  params: object,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown>;\n\nexport function invokeCustomMethod(\n  method: string,\n  params: object,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown> {\n  return _invokeCustomMethod(method, params, createRequestId(), {\n    ...options || {},\n    postEvent: postEvent,\n  });\n}\n\n/**\n * `request` function from the bridge with applied global `postEvent` option.\n */\nexport const request = ((method: any, eventOrEvents: any, options: any) => {\n  options ||= {};\n  options.postEvent ||= postEvent;\n  return _request(method, eventOrEvents, options);\n}) as RequestFn;\n\n/**\n * Shortcut for $postEvent call.\n */\nexport const postEvent = ((method: any, params: any) => {\n  return $postEvent()(method, params);\n}) as PostEventFn;\n","export const ERR_POPUP_INVALID_PARAMS = 'ERR_POPUP_INVALID_PARAMS';\nexport const ERR_INVALID_HOSTNAME = 'ERR_INVALID_HOSTNAME';\nexport const ERR_INVALID_SLUG = 'ERR_INVALID_SLUG';\nexport const ERR_DATA_INVALID_SIZE = 'ERR_DATA_INVALID_SIZE';\nexport const ERR_ACCESS_DENIED = 'ERR_ACCESS_DENIED';\nexport const ERR_ALREADY_CALLED = 'ERR_ALREADY_CALLED';\nexport const ERR_NOT_AVAILABLE = 'ERR_NOT_AVAILABLE';\nexport const ERR_NOT_SUPPORTED = 'ERR_NOT_SUPPORTED';\nexport const ERR_NOT_MOUNTED = 'ERR_NOT_MOUNTED';\n","import { type MethodName, supports, TypedError } from '@telegram-apps/bridge';\n\nimport { $version } from '@/scopes/globals.js';\nimport { ERR_NOT_SUPPORTED } from '@/errors.js';\n\nexport type WithIsSupported<F extends (...args: any) => any> = F & {\n  /**\n   * @returns True, if this function is supported.\n   */\n  isSupported(): boolean;\n};\n\n/**\n * Adds the \"isSupported\" method to the passed function returning true if the wrapped\n * function is supported.\n *\n * Also, if the \"isSupported\" method returned false during the function execution,\n * the ERR_NOT_SUPPORTED error will be thrown.\n * @param fn - function to extend.\n * @param isSupported - function to check if the function is supported.\n */\nexport function withIsSupported<F extends (...args: any) => any>(\n  fn: F,\n  isSupported: () => boolean,\n): WithIsSupported<F>;\n\n/**\n * Adds the \"isSupported\" method to the passed function returning true, if the current Mini Apps\n * version supports passed Mini Apps method.\n *\n * Also, if the \"isSupported\" method returned false during the function execution,\n * the ERR_NOT_SUPPORTED error will be thrown.\n * @param fn - function to extend.\n * @param method - Mini Apps method.\n */\nexport function withIsSupported<F extends (...args: any) => any>(\n  fn: F,\n  method: MethodName,\n): WithIsSupported<F>;\n\n/*@__NO_SIDE_EFFECTS__*/\nexport function withIsSupported<F extends (...args: any) => any>(\n  fn: F,\n  arg2: MethodName | (() => boolean),\n): WithIsSupported<F> {\n  function isSupported(): boolean {\n    return typeof arg2 === 'string' ? supports(arg2, $version()) : arg2();\n  }\n\n  return Object.assign(((...args) => {\n    if (!isSupported()) {\n      throw new TypedError(ERR_NOT_SUPPORTED);\n    }\n    return fn(...args);\n  }) as F, {\n    isSupported,\n  });\n}\n","import type { MethodName } from '@telegram-apps/bridge';\nimport { withIsSupported, type WithIsSupported } from '@/scopes/toolkit/withIsSupported.js';\n\n/*@__NO_SIDE_EFFECTS__*/\nexport function createWithIsSupported(isSupportedOrMethod: MethodName | (() => boolean)) {\n  return <Fn extends (...args: any[]) => any>(fn: Fn): WithIsSupported<Fn> => {\n    return withIsSupported(fn, isSupportedOrMethod as unknown as any);\n  };\n}","import type { Signal } from '@telegram-apps/signals';\n\n/**\n * Calls the function and subscribes it to the specified signal.\n *\n * We usually use this function in components' mount methods when we need not only to add\n * a signal change listener, but also call it. For example, to post the actual component state\n * to the Telegram application.\n * @param signal - signal to add change listener to.\n * @param fn - listener to add and call.\n */\nexport function subAndCall<T>(signal: Pick<Signal<T>, 'sub'>, fn: () => void) {\n  fn();\n  signal.sub(fn);\n}","import { type Computed, computed } from '@telegram-apps/signals';\n\nimport { type MethodName, supports } from '@telegram-apps/bridge';\nimport { $version } from '@/scopes/globals.js';\n\n/**\n * @returns A signal returning true if the specified Mini Apps method is supported.\n * @param method - Mini Apps method name\n */\nexport function createIsSupported(method: MethodName): Computed<boolean> {\n  return computed(() => {\n    return supports(method, $version());\n  });\n}","import { TypedError } from '@telegram-apps/bridge';\n\nimport { ERR_NOT_MOUNTED } from '@/errors.js';\n\nexport function withIsMounted<Fn extends (...args: any[]) => any>(\n  fn: Fn,\n  isMounted: () => boolean,\n): Fn {\n  return ((...args) => {\n    if (!isMounted()) {\n      throw new TypedError(ERR_NOT_MOUNTED);\n    }\n    return fn(...args);\n  }) as Fn;\n}","import { withIsMounted } from '@/scopes/toolkit/withIsMounted.js';\n\n/*@__NO_SIDE_EFFECTS__*/\nexport function createWithIsMounted(isMounted: () => boolean) {\n  return <Fn extends (...args: any[]) => any>(fn: Fn): Fn => {\n    return withIsMounted(fn, isMounted);\n  };\n}","import {\n  off,\n  on,\n  getStorageValue,\n  setStorageValue,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\nimport { signal } from '@telegram-apps/signals';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createWithIsSupported } from '@/scopes/toolkit/createWithIsSupported.js';\nimport { subAndCall } from '@/utils/subAndCall.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWithIsMounted } from '@/scopes/toolkit/createWithIsMounted.js';\n\ntype StorageValue = boolean;\n\nconst WEB_APP_SETUP_BACK_BUTTON = 'web_app_setup_back_button';\nconst BACK_BUTTON_PRESSED = 'back_button_pressed';\nconst STORAGE_KEY = 'backButton';\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * @returns True if the Back Button is supported.\n */\nexport const isSupported = createIsSupported(WEB_APP_SETUP_BACK_BUTTON);\n\nconst withIsSupported = createWithIsSupported(isSupported);\nconst withIsMounted = createWithIsMounted(isMounted);\n\n/**\n * Hides the Back Button.\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const hide = withIsMounted((): void => {\n  isVisible.set(false);\n});\n\n/**\n * True if the Back Button is currently visible.\n */\nexport const isVisible = signal(false);\n\n/**\n * Mounts the component.\n *\n * This function restores the component state and is automatically saving it in the local storage\n * if it changed.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const mount = withIsSupported((): void => {\n  if (!isMounted()) {\n    isVisible.set(isPageReload() && getStorageValue<StorageValue>(STORAGE_KEY) || false);\n    subAndCall(isVisible, onStateChanged);\n    isMounted.set(true);\n  }\n});\n\nfunction onStateChanged(): void {\n  const value = isVisible();\n  postEvent(WEB_APP_SETUP_BACK_BUTTON, { is_visible: value });\n  setStorageValue<StorageValue>(STORAGE_KEY, value);\n}\n\n/**\n * Add a new Back Button click listener.\n * @param fn - event listener.\n * @returns A function to remove bound listener.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const onClick = withIsSupported(\n  (fn: EventListener<'back_button_pressed'>): VoidFunction => on(BACK_BUTTON_PRESSED, fn),\n);\n\n/**\n * Removes the Back Button click listener.\n * @param fn - an event listener.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const offClick = withIsSupported((fn: EventListener<'back_button_pressed'>): void => {\n  off(BACK_BUTTON_PRESSED, fn);\n});\n\n/**\n * Shows the Back Button.\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const show = withIsMounted((): void => {\n  isVisible.set(true);\n});\n\n/**\n * Unmounts the component, removing the listener, saving the component state in the local storage.\n *\n * Note that this function does not remove listeners, added via the `onClick` function.\n * @see onClick\n */\nexport function unmount(): void {\n  isVisible.unsub(onStateChanged);\n  isMounted.set(false);\n}\n","import { batch, type Signal } from '@telegram-apps/signals';\nimport { type AsyncOptions, CancelablePromise, TypedError } from '@telegram-apps/bridge';\nimport { ERR_ALREADY_CALLED } from '@/errors.js';\nimport { withIsSupported } from '@/scopes/toolkit/withIsSupported.js';\n\n/**\n * Creates a mount function for a component.\n * @param mount - function mounting the component.\n * @param onMounted - callback which will be called with the mount result.\n * @param mountPromise - signal containing mount promise.\n * @param isMounted - signal containing mount state.\n * @param mountError - signal containing mount error.\n * @param isSupported - signal containing the component support flag.\n */\n// #__NO_SIDE_EFFECTS__\nexport function createMountFn<T = void>(\n  mount: (options: AsyncOptions) => (T | CancelablePromise<T>),\n  onMounted: (result: T) => void,\n  {\n    isMounting,\n    isMounted,\n    mountError,\n    isSupported,\n  }: {\n    isMounted: Signal<boolean>,\n    isMounting: Signal<boolean>,\n    mountError: Signal<Error | undefined>,\n    isSupported?: () => boolean,\n  },\n): (options?: AsyncOptions) => CancelablePromise<void> {\n  return withIsSupported(mountOptions => {\n      if (isMounted()) {\n        return CancelablePromise.resolve();\n      }\n\n      if (isMounting()) {\n        throw new TypedError(ERR_ALREADY_CALLED);\n      }\n      isMounting.set(true);\n\n      return CancelablePromise\n        .withFn((abortSignal) => mount({ abortSignal }), mountOptions)\n        .then<[true, T], [false, Error]>(\n          r => [true, r],\n          e => [false, e],\n        )\n        .then(tuple => {\n          batch(() => {\n            isMounting.set(false);\n            isMounted.set(true);\n\n            if (tuple[0]) {\n              onMounted(tuple[1]);\n            } else {\n              const error = tuple[1];\n              mountError.set(error);\n              throw error;\n            }\n          });\n        });\n    },\n    isSupported || (() => true),\n  );\n}","import { signal } from '@telegram-apps/signals';\n\nimport type { State } from './types.js';\n\n/**\n * Complete biometry manager state.\n */\nexport const state = signal<State | undefined>();\n\n/**\n * True if the manager is currently authenticating.\n */\nexport const isAuthenticating = signal<boolean>(false);\n\n/**\n * True if the manager is currently requesting access.\n */\nexport const isRequestingAccess = signal<boolean>(false);\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * True if the component is currently mounting.\n */\nexport const isMounting = signal<boolean>(false);\n\n/**\n * Error occurred while mounting the component.\n */\nexport const mountError = signal<Error | undefined>(undefined);\n","import type { EventPayload } from '@telegram-apps/bridge';\n\nimport type { State } from './types.js';\n\n/**\n * Converts `biometry_info_received` to some common shape.\n * @param event - event payload.\n * @see biometry_info_received\n */\nexport function eventToState(event: EventPayload<'biometry_info_received'>): State {\n  return event.available ? {\n    available: true,\n    tokenSaved: event.token_saved,\n    deviceId: event.device_id,\n    accessRequested: event.access_requested,\n    type: event.type,\n    accessGranted: event.access_granted,\n  } : {\n    available: false,\n  };\n}\n","import type { ExecuteWithOptions, CancelablePromise } from '@telegram-apps/bridge';\n\nimport { request } from '@/scopes/globals.js';\nimport { withIsSupported } from '@/scopes/toolkit/withIsSupported.js';\n\nimport { eventToState } from './eventToState.js';\nimport type { State } from './types.js';\n\nconst WEB_APP_BIOMETRY_GET_INFO = 'web_app_biometry_get_info';\n\n/**\n * Requests biometry information.\n * @param options - additional execution options.\n */\nexport const requestBiometry = withIsSupported(\n  (options?: ExecuteWithOptions): CancelablePromise<State> => {\n    return request(WEB_APP_BIOMETRY_GET_INFO, 'biometry_info_received', options).then(eventToState);\n  }, WEB_APP_BIOMETRY_GET_INFO,\n);\n","import {\n  on,\n  off,\n  TypedError,\n  CancelablePromise,\n  getStorageValue,\n  setStorageValue,\n  type BiometryTokenUpdateStatus,\n  type BiometryAuthRequestStatus,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { postEvent, request } from '@/scopes/globals.js';\nimport { createMountFn } from '@/scopes/createMountFn.js';\nimport { subAndCall } from '@/utils/subAndCall.js';\nimport { ERR_ALREADY_CALLED, ERR_NOT_AVAILABLE } from '@/errors.js';\n\nimport {\n  state,\n  mountError,\n  isMounted,\n  isRequestingAccess,\n  isAuthenticating,\n  isMounting,\n} from './signals.js';\nimport { requestBiometry } from './requestBiometry.js';\nimport { eventToState } from './eventToState.js';\nimport type {\n  State,\n  AuthenticateOptions,\n  RequestAccessOptions,\n  UpdateTokenOptions,\n} from './types.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWithIsSupported } from '@/scopes/toolkit/createWithIsSupported.js';\nimport { createWithIsMounted } from '@/scopes/toolkit/createWithIsMounted.js';\n\ntype StorageValue = State;\n\nconst WEB_APP_BIOMETRY_REQUEST_AUTH = 'web_app_biometry_request_auth';\nconst WEB_APP_BIOMETRY_REQUEST_ACCESS = 'web_app_biometry_request_access';\nconst WEB_APP_BIOMETRY_OPEN_SETTINGS = 'web_app_biometry_open_settings';\nconst WEB_APP_BIOMETRY_UPDATE_TOKEN = 'web_app_biometry_update_token';\nconst BIOMETRY_INFO_RECEIVED = 'biometry_info_received';\nconst STORAGE_KEY = 'biometry';\n\n/**\n * @returns True if the biometry manager is supported.\n */\nexport const isSupported = createIsSupported(WEB_APP_BIOMETRY_REQUEST_AUTH);\n\nconst withIsSupported = createWithIsSupported(isSupported);\nconst withIsMounted = createWithIsMounted(isMounted);\n\n/**\n * Attempts to authenticate a user using biometrics and fetch a previously stored\n * secure token.\n * @param options - method options.\n * @since 7.2\n * @returns Token from the local secure storage saved previously or undefined.\n * @throws {TypedError} ERR_ALREADY_CALLED\n * @throws {TypedError} ERR_NOT_AVAILABLE\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const authenticate = withIsMounted(\n  (options?: AuthenticateOptions): CancelablePromise<{\n    /**\n     * Authentication status.\n     */\n    status: BiometryAuthRequestStatus;\n    /**\n     * Token from the local secure storage saved previously.\n     */\n    token?: string;\n  }> => {\n    if (isAuthenticating()) {\n      return CancelablePromise.reject(new TypedError(ERR_ALREADY_CALLED));\n    }\n\n    const s = state();\n    if (!s || !s.available) {\n      return CancelablePromise.reject(new TypedError(ERR_NOT_AVAILABLE));\n    }\n\n    isAuthenticating.set(true);\n\n    options ||= {};\n    return request(WEB_APP_BIOMETRY_REQUEST_AUTH, 'biometry_auth_requested', {\n      ...options,\n      params: { reason: (options.reason || '').trim() },\n    })\n      .then(response => {\n        const { token } = response;\n        if (typeof token === 'string') {\n          state.set({ ...s, token });\n        }\n        return response;\n      })\n      .finally(() => {\n        isAuthenticating.set(false);\n      });\n  },\n);\n\n/**\n * Opens the biometric access settings for bots. Useful when you need to request biometrics\n * access to users who haven't granted it yet.\n *\n * _Note that this method can be called only in response to user interaction with the Mini App\n * interface (e.g. a click inside the Mini App or on the main button)_.\n * @since 7.2\n */\nexport const openSettings = withIsSupported((): void => {\n  postEvent(WEB_APP_BIOMETRY_OPEN_SETTINGS);\n});\n\n/**\n * Requests permission to use biometrics.\n * @since 7.2\n * @returns Promise with true, if access was granted.\n * @throws {TypedError} ERR_ALREADY_CALLED\n * @throws {TypedError} ERR_NOT_AVAILABLE\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const requestAccess = withIsMounted(\n  (options?: RequestAccessOptions): CancelablePromise<boolean> => {\n    if (isRequestingAccess()) {\n      return CancelablePromise.reject(new TypedError(ERR_ALREADY_CALLED));\n    }\n    isRequestingAccess.set(true);\n\n    options ||= {};\n    return request(WEB_APP_BIOMETRY_REQUEST_ACCESS, BIOMETRY_INFO_RECEIVED, {\n      ...options,\n      params: { reason: options.reason || '' },\n    })\n      .then(eventToState)\n      .then((info) => {\n        if (!info.available) {\n          throw new TypedError(ERR_NOT_AVAILABLE);\n        }\n        state.set(info);\n        return info.accessGranted;\n      })\n      .finally(() => {\n        isRequestingAccess.set(false);\n      });\n  },\n);\n\n/**\n * Mounts the component.\n * @throws {TypedError} ERR_ALREADY_CALLED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const mount = createMountFn<State>(\n  (options) => {\n    // Try to restore the state using the storage.\n    const s = isPageReload() && getStorageValue<StorageValue>(STORAGE_KEY);\n    if (s) {\n      return s;\n    }\n\n    // We were unable to retrieve data locally. In this case, we are sending a request returning\n    // the biometry information.\n    return requestBiometry(options);\n  },\n  result => {\n    on(BIOMETRY_INFO_RECEIVED, onBiometryInfoReceived);\n    subAndCall(state, onStateChanged);\n    state.set(result);\n  },\n  { isMounted, mountError, isMounting, isSupported },\n);\n\nconst onBiometryInfoReceived: EventListener<'biometry_info_received'> = e => {\n  state.set(eventToState(e));\n};\n\nfunction onStateChanged(): void {\n  const s = state();\n  s && setStorageValue<StorageValue>(STORAGE_KEY, s);\n}\n\n/**\n * Unmounts the component.\n */\nexport function unmount() {\n  off(BIOMETRY_INFO_RECEIVED, onBiometryInfoReceived);\n  state.unsub(onStateChanged);\n}\n\n/**\n * Updates the biometric token in a secure storage on the device.\n * @since 7.2\n * @returns Promise with `true`, if token was updated.\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const updateToken = withIsMounted(\n  (options?: UpdateTokenOptions): CancelablePromise<BiometryTokenUpdateStatus> => {\n    options ||= {};\n    return request(WEB_APP_BIOMETRY_UPDATE_TOKEN, 'biometry_token_updated', {\n      ...options,\n      params: {\n        token: options.token || '',\n        reason: options.reason,\n      },\n    }).then(r => r.status);\n  },\n);\n","import { isPageReload } from '@telegram-apps/navigation';\nimport { getStorageValue, setStorageValue } from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { subAndCall } from '@/utils/subAndCall.js';\nimport { createWithIsMounted } from '@/scopes/toolkit/createWithIsMounted.js';\n\ntype StorageValue = boolean;\n\nconst STORAGE_KEY = 'closingConfirmation';\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\nconst withIsMounted = createWithIsMounted(isMounted);\n\n/**\n * Disables the confirmation dialog when closing the Mini App.\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const disableConfirmation = withIsMounted((): void => {\n  isConfirmationEnabled.set(false);\n});\n\n/**\n * True if the confirmation dialog should be shown while the user is trying to close the Mini App.\n */\nexport const isConfirmationEnabled = signal(false);\n\n/**\n * Enables the confirmation dialog when closing the Mini App.\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const enableConfirmation = withIsMounted((): void => {\n  isConfirmationEnabled.set(true);\n});\n\n/**\n * Mounts the component.\n *\n * This function restores the component state and is automatically saving it in the local storage\n * if it changed.\n */\nexport function mount(): void {\n  if (!isMounted()) {\n    isConfirmationEnabled.set(isPageReload() && getStorageValue<StorageValue>(STORAGE_KEY) || false);\n    subAndCall(isConfirmationEnabled, onStateChanged);\n    isMounted.set(true);\n  }\n}\n\nfunction onStateChanged(): void {\n  const value = isConfirmationEnabled();\n  postEvent('web_app_setup_closing_behavior', { need_confirmation: value });\n  setStorageValue<StorageValue>(STORAGE_KEY, value);\n}\n\n/**\n * Unmounts the component, removing the listener, saving the component state in the local storage.\n */\nexport function unmount(): void {\n  isConfirmationEnabled.unsub(onStateChanged);\n  isMounted.set(false);\n}\n","import { CancelablePromise, type ExecuteWithOptions } from '@telegram-apps/bridge';\nimport { array, object, string } from '@telegram-apps/transformers';\n\nimport { invokeCustomMethod } from '@/scopes/globals.js';\nimport { createWithIsSupported } from '@/scopes/toolkit/createWithIsSupported.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\n\nconst WEB_APP_INVOKE_CUSTOM_METHOD = 'web_app_invoke_custom_method';\n\n/**\n * @returns True if the Cloud Storage is supported.\n */\nexport const isSupported = createIsSupported(WEB_APP_INVOKE_CUSTOM_METHOD);\n\nconst withIsSupported = createWithIsSupported(isSupported);\n\n/**\n * Deletes specified key or keys from the cloud storage.\n * @param keyOrKeys - key or keys to delete.\n * @param options - request execution options.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const deleteItem = withIsSupported((\n  keyOrKeys: string | string[],\n  options?: ExecuteWithOptions,\n): CancelablePromise<void> => {\n  const keys = Array.isArray(keyOrKeys) ? keyOrKeys : [keyOrKeys];\n  return keys.length\n    ? invokeCustomMethod('deleteStorageValues', { keys }, options).then()\n    : CancelablePromise.resolve();\n});\n\n/**\n * @param keys - keys list.\n * @param options - request execution options.\n * @returns Map, where a key is one of the specified in the `keys` argument, and a value is\n * a corresponding storage value.\n */\nfunction _getItem<K extends string>(\n  keys: K[],\n  options?: ExecuteWithOptions,\n): CancelablePromise<Record<K, string>>;\n\n/**\n * @param key - cloud storage key.\n * @param options - request execution options.\n * @return Value of the specified key. If the key was not created previously, the function\n * will return an empty string.\n */\nfunction _getItem(key: string, options?: ExecuteWithOptions): CancelablePromise<string>;\n\nfunction _getItem(\n  keyOrKeys: string | string[],\n  options?: ExecuteWithOptions,\n): CancelablePromise<string | Record<string, string>> {\n  const keys = Array.isArray(keyOrKeys) ? keyOrKeys : [keyOrKeys];\n\n  return keys.length\n    ? invokeCustomMethod('getStorageValues', { keys }, options).then(data => {\n      const result = object(\n        Object.fromEntries(keys.map((k) => [k, string()])),\n      )()(data);\n\n      return Array.isArray(keyOrKeys) ? result : result[keyOrKeys];\n    })\n    : CancelablePromise.resolve(typeof keyOrKeys === 'string' ? '' : {});\n}\n\n/**\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const getItem = withIsSupported(_getItem);\n\n/**\n * Returns a list of all keys presented in the cloud storage.\n * @param options - request execution options.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const getKeys = withIsSupported(\n  (options?: ExecuteWithOptions): CancelablePromise<string[]> => {\n    return invokeCustomMethod('getStorageKeys', {}, options).then(array(string())());\n  },\n);\n\n/**\n * Saves specified value by key.\n * @param key - storage key.\n * @param value - storage value.\n * @param options - request execution options.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const setItem = withIsSupported(\n  (key: string, value: string, options?: ExecuteWithOptions): CancelablePromise<void> => {\n    return invokeCustomMethod('saveStorageValue', {\n      key,\n      value,\n    }, options).then();\n  },\n);\n","import type {\n  ImpactHapticFeedbackStyle,\n  NotificationHapticFeedbackType,\n} from '@telegram-apps/bridge';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createWithIsSupported } from '@/scopes/toolkit/createWithIsSupported.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\n\nconst WEB_APP_TRIGGER_HAPTIC_FEEDBACK = 'web_app_trigger_haptic_feedback';\n\n/**\n * @returns True if the Haptic Feedback is supported.\n */\nexport const isSupported = createIsSupported(WEB_APP_TRIGGER_HAPTIC_FEEDBACK);\n\nconst withIsSupported = createWithIsSupported(isSupported);\n\n/**\n * A method tells that an impact occurred. The Telegram app may play the appropriate haptics based\n * on style value passed.\n * @param style - impact style.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const impactOccurred = withIsSupported((style: ImpactHapticFeedbackStyle): void => {\n  postEvent(WEB_APP_TRIGGER_HAPTIC_FEEDBACK, { type: 'impact', impact_style: style });\n});\n\n/**\n * A method tells that a task or action has succeeded, failed, or produced a warning. The Telegram\n * app may play the appropriate haptics based on type value passed.\n * @param type - notification type.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const notificationOccurred = withIsSupported((type: NotificationHapticFeedbackType): void => {\n  postEvent(WEB_APP_TRIGGER_HAPTIC_FEEDBACK, { type: 'notification', notification_type: type });\n});\n\n/**\n * A method tells that the user has changed a selection. The Telegram app may play the\n * appropriate haptics.\n *\n * Do not use this feedback when the user makes or confirms a selection; use it only when the\n * selection changes.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const selectionChanged = withIsSupported((): void => {\n  postEvent(WEB_APP_TRIGGER_HAPTIC_FEEDBACK, { type: 'selection_change' });\n});\n","import { computed, type Computed, signal } from '@telegram-apps/signals';\nimport { type InitData, retrieveLaunchParams } from '@telegram-apps/bridge';\n\n/* USUAL */\n\n/**\n * Complete component state.\n */\nexport const state = signal<InitData | undefined>(undefined);\n\n/* COMPUTED */\n\nfunction fromState<K extends keyof InitData>(key: K): Computed<InitData[K] | undefined> {\n  return computed(() => {\n    const s = state();\n    return s ? s[key] : undefined;\n  });\n}\n\n/**\n * @see InitData.authDate\n */\nexport const authDate = fromState('authDate');\n\n/**\n * @see InitData.canSendAfter\n */\nexport const canSendAfter = fromState('canSendAfter');\n\n/**\n * Date after which it is allowed to call\n * the [answerWebAppQuery](https://core.telegram.org/bots/api#answerwebappquery) method.\n */\nexport const canSendAfterDate = computed(() => {\n  const authDateValue = authDate();\n  const canSendAfterValue = canSendAfter();\n\n  return canSendAfterValue && authDateValue\n    ? new Date(authDateValue.getTime() + canSendAfterValue * 1000)\n    : undefined\n});\n\n/**\n * @see InitData.chat\n */\nexport const chat = fromState('chat');\n\n/**\n * @see InitData.chatType\n */\nexport const chatType = fromState('chatType');\n\n/**\n * @see InitData.chatInstance\n */\nexport const chatInstance = fromState('chatInstance');\n\n/**\n * @see InitData.hash\n */\nexport const hash = fromState('hash');\n\n/**\n * @see InitData.queryId\n */\nexport const queryId = fromState('queryId');\n\n/**\n * Raw representation of init data.\n */\nexport const raw = signal<string | undefined>();\n\n/**\n * @see InitData.receiver\n */\nexport const receiver = fromState('receiver');\n\n/**\n * Restores the component state.\n */\nexport function restore(): void {\n  const lp = retrieveLaunchParams();\n  state.set(lp.initData);\n  raw.set(lp.initDataRaw);\n}\n\n/**\n * @see InitData.startParam\n */\nexport const startParam = fromState('startParam');\n\n/**\n * @see InitData.user\n */\nexport const user = fromState('user');","import { initData } from '@telegram-apps/transformers';\nimport type { InitData } from '@telegram-apps/bridge';\n\n/**\n * Parses an incoming value as init data.\n * @param value - value to check.\n * @throws {} Parsing errors.\n */\nexport function parseInitData(value: unknown): InitData {\n  return initData()(value);\n}","import {\n  TypedError,\n  type ExecuteWithOptions,\n  type InvoiceStatus,\n  type ExecuteWithPostEvent,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { request } from '@/scopes/globals.js';\nimport { ERR_INVALID_HOSTNAME, ERR_INVALID_SLUG, ERR_ALREADY_CALLED } from '@/errors.js';\nimport { withIsSupported } from '@/scopes/toolkit/withIsSupported.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\n\nconst WEB_APP_OPEN_INVOICE = 'web_app_open_invoice';\n\n/**\n * True if the invoice is currently opened.\n */\nexport const isOpened = signal(false);\n\n/**\n * @returns True if the Invoice is supported.\n */\nexport const isSupported = createIsSupported(WEB_APP_OPEN_INVOICE);\n\n/**\n * Opens an invoice using its slug.\n * Example of the value: `jd231xxSd1`\n * @param slug - invoice slug.\n * @param options - additional options.\n * @throws {TypedError} ERR_ALREADY_CALLED\n * @throws {TypedError} ERR_INVALID_HOSTNAME\n * @throws {TypedError} ERR_INVALID_SLUG\n */\nexport function _open(slug: string, options?: ExecuteWithPostEvent): Promise<InvoiceStatus>;\n\n/**\n * Opens an invoice using its url.\n *\n * The function expects to pass a link in a full format, with the hostname \"t.me\".\n * Examples:\n * - `https://t.me/$jd231xxSd1`\n * - `https://t.me/invoice/jd231xxSd1`\n * @param url - invoice URL.\n * @param type - value type.\n * @param options - additional options.\n * @throws {TypedError} ERR_ALREADY_CALLED\n * @throws {TypedError} ERR_INVALID_HOSTNAME\n * @throws {TypedError} ERR_INVALID_SLUG\n */\nexport function _open(\n  url: string,\n  type: 'url',\n  options?: ExecuteWithPostEvent,\n): Promise<InvoiceStatus>;\n\nexport async function _open(\n  urlOrSlug: string,\n  optionsOrType?: 'url' | ExecuteWithOptions,\n  options?: ExecuteWithOptions,\n): Promise<InvoiceStatus> {\n  if (isOpened()) {\n    throw new TypedError(ERR_ALREADY_CALLED);\n  }\n\n  let slug: string;\n\n  if (optionsOrType === 'url') {\n    const { hostname, pathname } = new URL(urlOrSlug, window.location.href);\n    if (hostname !== 't.me') {\n      throw new TypedError(ERR_INVALID_HOSTNAME);\n    }\n\n    // Valid examples:\n    // \"/invoice/my-slug\"\n    // \"/$my-slug\"\n    const match = pathname.match(/^\\/(\\$|invoice\\/)([A-Za-z0-9\\-_=]+)$/);\n    if (!match) {\n      throw new TypedError(ERR_INVALID_SLUG);\n    }\n    [, , slug] = match;\n  } else {\n    slug = urlOrSlug;\n    options = optionsOrType;\n  }\n\n  isOpened.set(true);\n\n  return request(WEB_APP_OPEN_INVOICE, 'invoice_closed', {\n    ...options,\n    params: { slug },\n    capture: (data) => slug === data.slug,\n  })\n    .then(r => r.status)\n    .finally(() => {\n      isOpened.set(false);\n    });\n}\n\n/**\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const open = withIsSupported(_open, isSupported);\n","import { toRGB } from '@telegram-apps/transformers';\n\n/**\n * @param color - color in any format acceptable by the `toRGB` function.\n * @returns True if the color is recognized as dark.\n * @see toRGB\n */\nexport function isColorDark(color: string): boolean {\n  const rgb = toRGB(color);\n\n  // Real formula: hsp = Math.sqrt(0.299 * r * r + 0.587 * g * g + 0.114 * b * b)\n  // See: https://stackoverflow.com/a/596243\n  return Math.sqrt(\n    [0.299, 0.587, 0.114].reduce<number>((acc, modifier, idx) => {\n      // Extract part of #RRGGBB pattern and convert it to DEC.\n      const dec = parseInt(rgb.slice(1 + idx * 2, 1 + (idx + 1) * 2), 16);\n      return acc + dec * dec * modifier;\n    }, 0),\n  ) < 120;\n}\n","import type { ThemeParams } from '@telegram-apps/bridge';\nimport { computed, type Computed, signal } from '@telegram-apps/signals';\n\nimport { isColorDark } from '@/utils/isColorDark.js';\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * True if CSS variables are currently bound.\n */\nexport const isCssVarsBound = signal(false);\n\n/**\n * Complete component state.\n */\nexport const state = signal<ThemeParams>({});\n\nfunction fromState<K extends keyof ThemeParams>(key: K): Computed<ThemeParams[K] | undefined> {\n  return computed(() => state()[key]);\n}\n\n/**\n * @since v6.10\n */\nexport const accentTextColor = fromState('accentTextColor');\n\nexport const backgroundColor = fromState('bgColor');\n\nexport const buttonColor = fromState('buttonColor');\n\nexport const buttonTextColor = fromState('buttonTextColor');\n\n/**\n * @since v7.10\n */\nexport const bottomBarBgColor = fromState('bottomBarBgColor');\n\nexport const destructiveTextColor = fromState('destructiveTextColor');\n\n/**\n * @since v6.10\n */\nexport const headerBackgroundColor = fromState('headerBgColor');\n\nexport const hintColor = fromState('hintColor');\n\n/**\n * @returns True if the current color scheme is recognized as dark.\n * This value is calculated based on the current theme's background color.\n */\nexport const isDark = computed(() => {\n  const { bgColor } = state();\n  return !bgColor || isColorDark(bgColor);\n});\n\nexport const linkColor = fromState('linkColor');\n\nexport const secondaryBackgroundColor = fromState('secondaryBgColor');\n\n/**\n * @since v6.10\n */\nexport const sectionBackgroundColor = fromState('sectionBgColor');\n\n/**\n * @since v6.10\n */\nexport const sectionHeaderTextColor = fromState('sectionHeaderTextColor');\n\n/**\n * @since v7.6\n */\nexport const sectionSeparatorColor = fromState('sectionSeparatorColor');\n\n/**\n * @since v6.10\n */\nexport const subtitleTextColor = fromState('subtitleTextColor');\n\nexport const textColor = fromState('textColor');\n","import { computed, type Computed, signal } from '@telegram-apps/signals';\n\nimport { buttonColor, buttonTextColor } from '@/scopes/components/theme-params/signals.js';\n\nimport type { State } from './types.js';\n\nfunction fromState<K extends keyof Required<State>>(key: K): Computed<Required<State>[K]> {\n  return computed(() => state()[key]);\n}\n\nexport const internalState = signal<State>({\n  hasShineEffect: false,\n  isEnabled: true,\n  isLoaderVisible: false,\n  isVisible: false,\n  text: 'Continue',\n});\n\n/**\n * Complete component state.\n */\nexport const state = computed<Required<State>>(() => {\n  const s = internalState();\n  return {\n    ...s,\n    backgroundColor: s.backgroundColor || buttonColor() || '#2481cc',\n    textColor: s.textColor || buttonTextColor() || '#ffffff',\n  };\n});\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * @see State.backgroundColor\n */\nexport const backgroundColor = fromState('backgroundColor');\n\n/**\n * @see State.hasShineEffect\n */\nexport const hasShineEffect = fromState('hasShineEffect');\n\n/**\n * @see State.isEnabled\n */\nexport const isEnabled = fromState('isEnabled');\n\n/**\n * @see State.isLoaderVisible\n */\nexport const isLoaderVisible = fromState('isLoaderVisible');\n\n/**\n * @see State.isVisible\n */\nexport const isVisible = fromState('isVisible');\n\n/**\n * @see State.text\n */\nexport const text = fromState('text');\n\n/**\n * @see State.textColor\n */\nexport const textColor = fromState('textColor');\n","import {\n  off,\n  on,\n  getStorageValue,\n  setStorageValue,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { subAndCall } from '@/utils/subAndCall.js';\nimport { createWithIsMounted } from '@/scopes/toolkit/createWithIsMounted.js';\n\nimport { internalState, isMounted, state } from './signals.js';\nimport type { State } from './types.js';\n\ntype StorageValue = State;\n\nconst WEB_APP_SETUP_MAIN_BUTTON = 'web_app_setup_main_button';\nconst MAIN_BUTTON_PRESSED = 'main_button_pressed';\nconst STORAGE_KEY = 'mainButton';\n\nconst withIsMounted = createWithIsMounted(isMounted);\n\n/**\n * Mounts the component.\n *\n * This function restores the component state and is automatically saving it in the local storage\n * if it changed.\n */\nexport function mount(): void {\n  if (!isMounted()) {\n    const prev = isPageReload() && getStorageValue<StorageValue>(STORAGE_KEY);\n    prev && internalState.set(prev);\n\n    internalState.sub(onInternalStateChanged);\n    subAndCall(state, onStateChanged);\n    isMounted.set(true);\n  }\n}\n\n/**\n * Adds a new main button click listener.\n * @param fn - event listener.\n * @returns A function to remove bound listener.\n */\nexport function onClick(fn: EventListener<'main_button_pressed'>): VoidFunction {\n  return on(MAIN_BUTTON_PRESSED, fn);\n}\n\n/**\n * Removes the main button click listener.\n * @param fn - an event listener.\n */\nexport function offClick(fn: EventListener<'main_button_pressed'>): void {\n  off(MAIN_BUTTON_PRESSED, fn);\n}\n\nfunction onInternalStateChanged(state: State): void {\n  setStorageValue<StorageValue>(STORAGE_KEY, state);\n}\n\nfunction onStateChanged(): void {\n  const s = state();\n\n  // We should not commit changes until the payload is correct.\n  // Some version of Telegram will crash due to the empty value of the text.\n  s.text && postEvent(WEB_APP_SETUP_MAIN_BUTTON, {\n    color: s.backgroundColor,\n    has_shine_effect: s.hasShineEffect,\n    is_active: s.isEnabled,\n    is_progress_visible: s.isLoaderVisible,\n    is_visible: s.isVisible,\n    text: s.text,\n    text_color: s.textColor,\n  });\n}\n\n/**\n * Updates the main button state.\n * @param updates - state changes to perform.\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const setParams = withIsMounted((updates: Partial<State>): void => {\n  internalState.set({\n    ...internalState(),\n    ...Object.fromEntries(\n      Object.entries(updates).filter(([, v]) => v !== undefined),\n    ),\n  });\n});\n\n/**\n * Unmounts the component, removing the listener, saving the component state in the local storage.\n *\n * Note that this function does not remove listeners, added via the `onClick` function.\n * @see onClick\n */\nexport function unmount(): void {\n  internalState.unsub(onInternalStateChanged);\n  state.unsub(onStateChanged);\n  isMounted.set(false);\n}\n","import { themeParams } from '@telegram-apps/transformers';\nimport type { ThemeParams } from '@telegram-apps/bridge';\n\n/**\n * Parses incoming value as theme parameters.\n * @param value - value to parse.\n */\nexport function parseThemeParams(value: unknown): ThemeParams {\n  return themeParams()(value);\n}\n","import {\n  off,\n  on,\n  TypedError,\n  camelToKebab,\n  getStorageValue,\n  setStorageValue,\n  retrieveLaunchParams,\n  deleteCssVar,\n  setCssVar,\n  type EventListener,\n  type RGB,\n  type ThemeParams,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { ERR_ALREADY_CALLED } from '@/errors.js';\nimport { withIsMounted } from '@/scopes/toolkit/withIsMounted.js';\n\nimport { isCssVarsBound, state, isMounted } from './signals.js';\nimport { parseThemeParams } from './parseThemeParams.js';\nimport type { GetCssVarNameFn } from './types.js';\n\ntype StorageValue = ThemeParams;\n\nconst STORAGE_KEY = 'themeParams';\nconst THEME_CHANGED_EVENT = 'theme_changed';\n\n/**\n * Creates CSS variables connected with the current theme parameters.\n *\n * By default, created CSS variables names are following the pattern \"--tg-theme-{name}\", where\n * {name} is a theme parameters key name converted from camel case to kebab case.\n *\n * Default variables:\n * - `--tg-theme-bg-color`\n * - `--tg-theme-secondary-text-color`\n *\n * Variables are being automatically updated if theme parameters were changed.\n *\n * @param getCSSVarName - function, returning complete CSS variable name for the specified\n * theme parameters key.\n * @returns Function to stop updating variables.\n * @throws TypedError ERR_ALREADY_CALLED\n */\nexport const bindCssVars = withIsMounted((getCSSVarName?: GetCssVarNameFn): VoidFunction => {\n  if (isCssVarsBound()) {\n    throw new TypedError(ERR_ALREADY_CALLED);\n  }\n  getCSSVarName ||= (prop) => `--tg-theme-${camelToKebab(prop)}`;\n\n  function forEachEntry(fn: (key: string, value: RGB) => void): void {\n    Object.entries(state()).forEach(([k, v]) => {\n      v && fn(k, v);\n    });\n  }\n\n  function actualize(): void {\n    forEachEntry((k, v) => {\n      setCssVar(getCSSVarName!(k), v);\n    });\n  }\n\n  actualize();\n  state.sub(actualize);\n  isCssVarsBound.set(true);\n\n  return () => {\n    forEachEntry(deleteCssVar);\n    state.unsub(actualize);\n    isCssVarsBound.set(false);\n  };\n}, isMounted);\n\n/**\n * Mounts the component.\n *\n * This function restores the component state and is automatically saving it in the local storage\n * if it changed.\n */\nexport function mount(): void {\n  if (!isMounted()) {\n    on(THEME_CHANGED_EVENT, onThemeChanged);\n    state.set(isPageReload() && getStorageValue<StorageValue>(STORAGE_KEY) || retrieveLaunchParams().themeParams);\n    isMounted.set(true);\n  }\n}\n\n/**\n * Actualizes the theme parameters whenever an according event was received.\n * @param e - event data.\n */\nconst onThemeChanged: EventListener<'theme_changed'> = (e) => {\n  const value = parseThemeParams(e.theme_params);\n  state.set(value);\n  setStorageValue<StorageValue>(STORAGE_KEY, value);\n};\n\n/**\n * Unmounts the component, removing the listener, saving the component state in the local storage.\n */\nexport function unmount(): void {\n  off(THEME_CHANGED_EVENT, onThemeChanged);\n  isMounted.set(false);\n}\n","import {\n  MethodNameWithVersionedParams,\n  MethodVersionedParams,\n  supports, TypedError,\n} from '@telegram-apps/bridge';\nimport { $version } from '@/scopes/globals.js';\nimport { ERR_NOT_SUPPORTED } from '@/errors.js';\n\ntype HasCheckSupportMethodTuple<FnArgs extends any[]> = {\n  [M in MethodNameWithVersionedParams]: [\n    method: M,\n    parameter: MethodVersionedParams<M>,\n    shouldCheck: (...args: FnArgs) => boolean,\n  ]\n}[MethodNameWithVersionedParams];\n\nexport type WithSupports<\n  F extends (...args: any) => any,\n  S extends Record<string, unknown>\n> = F & {\n  /**\n   * @returns True, if this function is supported.\n   */\n  supports(method: keyof S): boolean;\n};\n\n/**\n * Adds the \"supports\" method to the passed function returning true, if specified action is\n * supported by the current Mini Apps version.\n *\n * Wrapped function throws an error in case, the passed arguments are subject to check for one\n * of the schema properties.\n * @param fn - function to extend.\n * @param schema - map where key is an action name and value is a tuple containing Mini Apps\n * method name and its option.\n */\n\n/*@__NO_SIDE_EFFECTS__*/\nexport function withSupports<\n  F extends (...args: any) => any,\n  S extends Record<string, HasCheckSupportMethodTuple<Parameters<F>>>,\n>(fn: F, schema: S): WithSupports<F, S> {\n  function sup(param: keyof S): boolean {\n    const tuple = schema[param];\n    return supports(tuple[0], tuple[1], $version());\n  }\n\n  return Object.assign(\n    (...args: Parameters<F>): ReturnType<F> => {\n      for (const k in schema) {\n        if (schema[k][2](...args) && !sup(k)) {\n          throw new TypedError(ERR_NOT_SUPPORTED, `Parameter \"${k}\" is not supported`);\n        }\n      }\n      return fn(...args);\n    },\n    fn,\n    { supports: sup },\n  );\n}","import { Computed, computed, signal } from '@telegram-apps/signals';\nimport { isRGB } from '@telegram-apps/transformers';\nimport type { BackgroundColor, BottomBarColor, RGB } from '@telegram-apps/bridge';\n\nimport { isColorDark } from '@/utils/isColorDark.js';\nimport {\n  backgroundColor as themeBgColor,\n  secondaryBackgroundColor as themeSecondaryBgColor,\n  bottomBarBgColor as themeBottomBarBgColor,\n} from '@/scopes/components/theme-params/signals.js';\n\nimport type { HeaderColor, State } from './types.js';\n\n// #__NO_SIDE_EFFECTS__\nfunction rgbBasedOn(signal: Computed<'bg_color' | 'secondary_bg_color' | RGB>) {\n  return computed<RGB | undefined>(() => {\n    const color = signal();\n\n    return isRGB(color) ? color : color === 'bg_color'\n      ? themeBgColor()\n      : themeSecondaryBgColor();\n  });\n}\n\n/**\n * The Mini App background color.\n */\nexport const backgroundColor = signal<BackgroundColor>('bg_color');\n\n/**\n * RGB representation of the background color.\n *\n * This value requires the Theme Params component to be mounted to extract a valid RGB value\n * of the color key.\n */\nexport const backgroundColorRGB = rgbBasedOn(backgroundColor);\n\n\n/**\n * The Mini App bottom bar background color.\n */\nexport const bottomBarColor = signal<BottomBarColor>('bottom_bar_bg_color');\n\n/**\n * RGB representation of the bottom bar background color.\n *\n * This value requires the Theme Params component to be mounted to extract a valid RGB value\n * of the color key.\n */\nexport const bottomBarColorRGB = computed<RGB | undefined>(() => {\n  const color = bottomBarColor();\n  return isRGB(color)\n    ? color\n    : color === 'bottom_bar_bg_color'\n      // Following the logic from the Telegram SDK.\n      // I removed \"|| '#ffffff'\" because this seems too strange to me. This is just not right.\n      ? themeBottomBarBgColor() || themeSecondaryBgColor()\n      : color === 'secondary_bg_color'\n        ? themeSecondaryBgColor()\n        : themeBgColor();\n});\n\n/**\n * The Mini App header color.\n */\nexport const headerColor = signal<HeaderColor>('bg_color');\n\n/**\n * RGB representation of the header color.\n *\n * This value requires the Theme Params component to be mounted to extract a valid RGB value\n * of the color key.\n */\nexport const headerColorRGB = rgbBasedOn(headerColor);\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * True if CSS variables are currently bound.\n */\nexport const isCssVarsBound = signal(false);\n\n/**\n * True if the current Mini App background color is recognized as dark.\n */\nexport const isDark = computed(() => {\n  const color = backgroundColorRGB();\n  return color ? isColorDark(color) : false;\n});\n\n/**\n * Complete component state.\n */\nexport const state = computed<State>(() => ({\n  backgroundColor: backgroundColor(),\n  bottomBarColor: bottomBarColor(),\n  headerColor: headerColor(),\n}));\n","import {\n  getStorageValue,\n  setStorageValue,\n  createCbCollector,\n  camelToKebab,\n  deleteCssVar,\n  setCssVar,\n  TypedError,\n  supports,\n  type RGB,\n  type BottomBarColor,\n  type BackgroundColor,\n} from '@telegram-apps/bridge';\nimport { isRGB } from '@telegram-apps/transformers';\nimport { isPageReload } from '@telegram-apps/navigation';\nimport { computed, type Computed } from '@telegram-apps/signals';\n\nimport { $version, postEvent } from '@/scopes/globals.js';\nimport { ERR_ALREADY_CALLED } from '@/errors.js';\nimport { mount as tpMount } from '@/scopes/components/theme-params/methods.js';\nimport { subAndCall } from '@/utils/subAndCall.js';\nimport { withSupports } from '@/scopes/toolkit/withSupports.js';\nimport { withIsSupported } from '@/scopes/toolkit/withIsSupported.js';\nimport { createWithIsSupported } from '@/scopes/toolkit/createWithIsSupported.js';\nimport { createWithIsMounted } from '@/scopes/toolkit/createWithIsMounted.js';\n\nimport {\n  headerColor,\n  backgroundColor,\n  isCssVarsBound,\n  state,\n  isMounted,\n  bottomBarColor,\n  headerColorRGB,\n  bottomBarColorRGB,\n  backgroundColorRGB,\n} from './signals.js';\nimport type { GetCssVarNameFn, HeaderColor, State } from './types.js';\n\ntype StorageValue = State;\n\nconst WEB_APP_SET_BACKGROUND_COLOR = 'web_app_set_background_color';\nconst WEB_APP_SET_BOTTOM_BAR_COLOR = 'web_app_set_bottom_bar_color';\nconst WEB_APP_SET_HEADER_COLOR = 'web_app_set_header_color';\nconst STORAGE_KEY = 'miniApp';\n\n/**\n * True if the Mini App component is supported.\n */\nexport const isSupported = computed(() => {\n  return ([\n    WEB_APP_SET_BACKGROUND_COLOR,\n    WEB_APP_SET_BOTTOM_BAR_COLOR,\n    WEB_APP_SET_HEADER_COLOR,\n  ] as const).some(method => supports(method, $version()));\n});\n\nconst withComponentSupported = createWithIsSupported(isSupported);\nconst withIsMounted = createWithIsMounted(isMounted);\n\n/**\n * Creates CSS variables connected with the mini app.\n *\n * Default variables:\n * - `--tg-bg-color`\n * - `--tg-header-color`\n * - `--tg-bottom-bar-color`\n *\n * Variables are being automatically updated if theme parameters were changed.\n *\n * @param getCSSVarName - function, returning complete CSS variable name for the specified\n * mini app key.\n * @returns Function to stop updating variables.\n * @throws {TypedError} ERR_ALREADY_CALLED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const bindCssVars = withIsMounted((getCSSVarName?: GetCssVarNameFn): VoidFunction => {\n  if (isCssVarsBound()) {\n    throw new TypedError(ERR_ALREADY_CALLED);\n  }\n  const [addCleanup, cleanup] = createCbCollector();\n\n  /**\n   * Binds specified CSS variable to a signal.\n   * @param cssVar - CSS variable name.\n   * @param signal - signal to listen changes to.\n   */\n  function bind(cssVar: string, signal: Computed<RGB | undefined>) {\n    function update() {\n      setCssVar(cssVar, signal() || null);\n    }\n\n    // Instantly set CSS variable.\n    update();\n\n    // Remember to clean this relation up.\n    addCleanup(signal.sub(update), deleteCssVar.bind(null, cssVar));\n  }\n\n  getCSSVarName ||= (prop) => `--tg-${camelToKebab(prop)}`;\n  bind(getCSSVarName('bgColor'), backgroundColorRGB);\n  bind(getCSSVarName('bottomBarColor'), bottomBarColorRGB);\n  bind(getCSSVarName('headerColor'), headerColorRGB);\n  addCleanup(() => {\n    isCssVarsBound.set(false);\n  });\n\n  isCssVarsBound.set(true);\n\n  return cleanup;\n});\n\n/**\n * Closes the Mini App.\n * @param returnBack - Should the client return to the previous activity.\n */\nexport function close(returnBack?: boolean): void {\n  postEvent('web_app_close', { return_back: returnBack });\n}\n\n/**\n * Mounts the component.\n *\n * This function restores the component state and is automatically saving it in the local storage\n * if it changed.\n *\n * Internally, the function mounts the Theme Params component to work with correctly extracted\n * theme palette values.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const mount = withComponentSupported((): void => {\n  if (!isMounted()) {\n    const s = isPageReload() && getStorageValue<StorageValue>(STORAGE_KEY);\n    tpMount();\n\n    backgroundColor.set(s ? s.backgroundColor : 'bg_color');\n    bottomBarColor.set(s ? s.bottomBarColor : 'bottom_bar_bg_color');\n    headerColor.set(s ? s.headerColor : 'bg_color');\n\n    setBackgroundColor.isSupported() && subAndCall(backgroundColor, onBgColorChanged);\n    setBottomBarColor.isSupported() && subAndCall(bottomBarColor, onBottomBarBgColorChanged);\n    setHeaderColor.isSupported() && subAndCall(headerColor, onHeaderColorChanged);\n\n    isMounted.set(true);\n  }\n});\n\nfunction onBgColorChanged(): void {\n  saveState();\n  postEvent(WEB_APP_SET_BACKGROUND_COLOR, { color: backgroundColor() });\n}\n\nfunction onBottomBarBgColorChanged(): void {\n  saveState();\n  postEvent(WEB_APP_SET_BOTTOM_BAR_COLOR, { color: bottomBarColor() });\n}\n\nfunction onHeaderColorChanged(): void {\n  const color = headerColor();\n  saveState();\n  postEvent(WEB_APP_SET_HEADER_COLOR, isRGB(color) ? { color } : { color_key: color });\n}\n\n/**\n * Informs the Telegram app that the Mini App is ready to be displayed.\n *\n * It is recommended to call this method as early as possible, as soon as all essential\n * interface elements loaded.\n *\n * Once this method is called, the loading placeholder is hidden and the Mini App shown.\n *\n * If the method is not called, the placeholder will be hidden only when the page was fully loaded.\n */\nexport function ready(): void {\n  postEvent('web_app_ready');\n}\n\nfunction saveState() {\n  setStorageValue<StorageValue>(STORAGE_KEY, state());\n}\n\n/**\n * Updates the background color.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const setBackgroundColor = withIsSupported(\n  withIsMounted((color: BackgroundColor): void => {\n    backgroundColor.set(color);\n  }),\n  WEB_APP_SET_BACKGROUND_COLOR,\n);\n\n/**\n * Updates the bottom bar background color.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const setBottomBarColor = withIsSupported(\n  withIsMounted((color: BottomBarColor) => {\n    bottomBarColor.set(color);\n  }),\n  WEB_APP_SET_BOTTOM_BAR_COLOR,\n);\n\n/**\n * Updates the header color.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const setHeaderColor = withSupports(\n  withIsSupported(\n    withIsMounted((color: HeaderColor): void => {\n      headerColor.set(color);\n    }),\n    WEB_APP_SET_HEADER_COLOR,\n  ),\n  {\n    color: [WEB_APP_SET_HEADER_COLOR, 'color', isRGB],\n  },\n);\n\n/**\n * Unmounts the component, removing the listener, saving the component state in the local storage.\n */\nexport function unmount(): void {\n  backgroundColor.unsub(onBgColorChanged);\n  bottomBarColor.unsub(onBottomBarBgColorChanged);\n  headerColor.unsub(onHeaderColorChanged);\n  isMounted.set(false);\n}\n","import { type PopupParams, TypedError } from '@telegram-apps/bridge';\n\nimport { ERR_POPUP_INVALID_PARAMS } from '@/errors.js';\n\nimport type { OpenOptions } from './types.js';\n\n/**\n * Prepares popup parameters before sending them to native app.\n * @param params - popup parameters.\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid title\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid message\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid buttons count\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid button id length.\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid text length.\n */\nexport function prepareParams(params: OpenOptions): PopupParams {\n  const message = params.message.trim();\n  const title = (params.title || '').trim();\n  const buttons = params.buttons || [];\n\n  if (title.length > 64) {\n    throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Invalid title: ${title}`);\n  }\n  if (!message || message.length > 256) {\n    throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Invalid message: ${message}`);\n  }\n  if (buttons.length > 3) {\n    throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Invalid buttons count: ${buttons.length}`);\n  }\n\n  return {\n    title,\n    message,\n    buttons: buttons.length\n      ? buttons.map((b, idx) => {\n        const id = b.id || '';\n        if (id.length > 64) {\n          throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Button with index ${idx} has invalid id: ${id}`);\n        }\n\n        if (!b.type || b.type === 'default' || b.type === 'destructive') {\n          const text = b.text.trim();\n          if (!text || text.length > 64) {\n            throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Button with index ${idx} has invalid text: ${text}`);\n          }\n          return { type: b.type, text, id };\n        }\n        return { type: b.type, id };\n      })\n      : [{ type: 'close', id: '' }],\n  };\n}","import { TypedError } from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { request } from '@/scopes/globals.js';\nimport { ERR_ALREADY_CALLED } from '@/errors.js';\nimport { withIsSupported } from '@/scopes/toolkit/withIsSupported.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\n\nimport { prepareParams } from './prepareParams.js';\nimport type { OpenOptions } from './types.js';\n\nconst WEB_APP_OPEN_POPUP = 'web_app_open_popup';\n\n/**\n * @returns True if the Popup is supported.\n */\nexport const isSupported = createIsSupported(WEB_APP_OPEN_POPUP);\n\n/**\n * True if a popup is currently opened.\n */\nexport const isOpened = signal(false);\n\n/**\n * A method that shows a native popup described by the `params` argument.\n * The promise will be resolved when the popup is closed. Resolved value will have\n * an identifier of pressed button.\n *\n * If a user clicked outside the popup or clicked the top right popup close button, null will be\n * returned.\n *\n * @param options - popup parameters.\n * @throws {TypedError} ERR_ALREADY_CALLED\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid title length.\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid message length.\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid buttons length.\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid button id length.\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid text length.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const open = withIsSupported(\n  async (options: OpenOptions): Promise<string | null> => {\n    if (isOpened()) {\n      throw new TypedError(ERR_ALREADY_CALLED);\n    }\n    isOpened.set(true);\n\n    try {\n      const { button_id: buttonId = null } = await request(WEB_APP_OPEN_POPUP, 'popup_closed', {\n        ...options,\n        params: prepareParams(options),\n      });\n      return buttonId;\n    } finally {\n      isOpened.set(false);\n    }\n  },\n  isSupported,\n);","import {\n  CancelablePromise,\n  createCbCollector,\n  TypedError,\n  on,\n  EnhancedPromise,\n  type ExecuteWithOptions,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { ERR_ALREADY_CALLED } from '@/errors.js';\nimport { createWithIsSupported } from '@/scopes/toolkit/createWithIsSupported.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\n\ninterface OpenSharedOptions extends ExecuteWithOptions {\n  /**\n   * Title to be displayed in the scanner.\n   */\n  text?: string;\n}\n\nconst WEB_APP_CLOSE_SCAN_QR_POPUP = 'web_app_close_scan_qr_popup';\nconst WEB_APP_OPEN_SCAN_QR_POPUP = 'web_app_open_scan_qr_popup';\nconst SCAN_QR_POPUP_CLOSED = 'scan_qr_popup_closed';\nconst QR_TEXT_RECEIVED = 'qr_text_received';\n\n/**\n * @returns True if the QR scanner is supported.\n */\nexport const isSupported = createIsSupported(WEB_APP_OPEN_SCAN_QR_POPUP);\n\nconst withIsSupported = createWithIsSupported(isSupported);\n\n/**\n * Closes the scanner.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const close = withIsSupported((): void => {\n  isOpened.set(false);\n  postEvent(WEB_APP_CLOSE_SCAN_QR_POPUP);\n});\n\n/**\n * True if the scanner is currently opened.\n */\nexport const isOpened = signal(false);\n\n/**\n * Opens the scanner and returns a promise which will be resolved with the QR content if the\n * `capture` function returned true.\n *\n * Promise may also be resolved to null if the scanner was closed.\n * @param options - method options.\n * @returns A promise with QR content presented as string or undefined if the scanner was closed.\n * @throws {TypedError} ERR_ALREADY_CALLED\n */\nfunction _open(options?: OpenSharedOptions & {\n  /**\n   * Function, which should return true if a scanned QR should be captured.\n   * @param qr - scanned QR content.\n   */\n  capture?: (qr: string) => boolean;\n}): CancelablePromise<string | undefined>;\n\n/**\n * Opens the scanner and calls the `onCaptured` function each time, a QR was scanned.\n *\n * The method does not return anything and expects the scanner to be closed externally by a user\n * or via the `close` method.\n * @param options - method options.\n * @throws {TypedError} ERR_ALREADY_CALLED\n */\nfunction _open(options: OpenSharedOptions & {\n  /**\n   * Function which will be called if some QR code was scanned.\n   * @param qr - scanned QR content.\n   */\n  onCaptured: (qr: string) => void;\n}): CancelablePromise<void>;\n\nfunction _open(options?: OpenSharedOptions & {\n  onCaptured?: (qr: string) => void;\n  capture?: (qr: string) => boolean;\n}): CancelablePromise<string | void> {\n  return CancelablePromise.withFn((abortSignal) => {\n    if (isOpened()) {\n      throw new TypedError(ERR_ALREADY_CALLED);\n    }\n    isOpened.set(true);\n\n    options ||= {};\n    const { onCaptured, text, capture } = options;\n    const [, cleanup] = createCbCollector(\n      // Whenever the scanner was closed for some reason (by a developer or a user), we should\n      // resolve the promise with undefined.\n      isOpened.sub(() => {\n        promise.resolve();\n      }),\n      // Whenever user closed the scanner, update the isOpened signal state.\n      on(SCAN_QR_POPUP_CLOSED, () => {\n        isOpened.set(false);\n      }),\n      // Whenever some QR was scanned, we should check if it must be captured.\n      on(QR_TEXT_RECEIVED, (event) => {\n        if (onCaptured) {\n          onCaptured(event.data);\n        } else if (!capture || capture(event.data)) {\n          promise.resolve(event.data);\n          close();\n        }\n      }),\n    );\n\n    const promise = new EnhancedPromise<string | void>({ abortSignal })\n      .catch(close)\n      .finally(cleanup);\n\n    (options.postEvent || postEvent)(WEB_APP_OPEN_SCAN_QR_POPUP, { text });\n\n    return promise;\n  }, options);\n}\n\n/**\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const open = withIsSupported(_open)","import { computed, type Computed, signal } from '@telegram-apps/signals';\n\nimport { buttonColor } from '@/scopes/components/theme-params/signals.js';\nimport { bottomBarColorRGB } from '@/scopes/components/mini-app/signals.js';\n\nimport type { State } from './types.js';\n\nfunction fromState<K extends keyof Required<State>>(key: K): Computed<Required<State>[K]> {\n  return computed(() => state()[key]);\n}\n\nexport const internalState = signal<State>({\n  hasShineEffect: false,\n  isEnabled: true,\n  isLoaderVisible: false,\n  isVisible: false,\n  position: 'left',\n  text: 'Cancel',\n});\n\n/**\n * Complete component state.\n */\nexport const state = computed<Required<State>>(() => {\n  const s = internalState();\n  return {\n    ...s,\n    backgroundColor: s.backgroundColor || bottomBarColorRGB() || '#000000',\n    textColor: s.textColor || buttonColor() || '#2481cc',\n  };\n});\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * @see State.backgroundColor\n */\nexport const backgroundColor = fromState('backgroundColor');\n\n/**\n * @see State.hasShineEffect\n */\nexport const hasShineEffect = fromState('hasShineEffect');\n\n/**\n * @see State.isEnabled\n */\nexport const isEnabled = fromState('isEnabled');\n\n/**\n * @see State.isLoaderVisible\n */\nexport const isLoaderVisible = fromState('isLoaderVisible');\n\n/**\n * @see State.isVisible\n */\nexport const isVisible = fromState('isVisible');\n\n/**\n * @see State.position\n */\nexport const position = fromState('position');\n\n/**\n * @see State.text\n */\nexport const text = fromState('text');\n\n/**\n * @see State.textColor\n */\nexport const textColor = fromState('textColor');\n","import {\n  off,\n  on,\n  getStorageValue,\n  setStorageValue,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { subAndCall } from '@/utils/subAndCall.js';\nimport { createWithIsSupported } from '@/scopes/toolkit/createWithIsSupported.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWithIsMounted } from '@/scopes/toolkit/createWithIsMounted.js';\n\nimport { internalState, isMounted, state } from './signals.js';\nimport type { State } from './types.js';\n\ntype StorageValue = State;\n\nconst WEB_APP_SETUP_SECONDARY_BUTTON = 'web_app_setup_secondary_button';\nconst SECONDARY_BUTTON_PRESSED = 'secondary_button_pressed';\nconst STORAGE_KEY = 'secondaryButton';\n\n/**\n * @returns True if the Secondary Button is supported.\n */\nexport const isSupported = createIsSupported(WEB_APP_SETUP_SECONDARY_BUTTON);\n\nconst withIsSupported = createWithIsSupported(isSupported);\nconst withIsMounted = createWithIsMounted(isMounted);\n\n/**\n * Mounts the component.\n *\n * This function restores the component state and is automatically saving it in the local storage\n * if it changed.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const mount = withIsSupported((): void => {\n  if (!isMounted()) {\n    const prev = isPageReload() && getStorageValue<StorageValue>(STORAGE_KEY);\n    prev && internalState.set(prev);\n\n    internalState.sub(onInternalStateChanged);\n    subAndCall(state, onStateChanged);\n    isMounted.set(true);\n  }\n});\n\n/**\n * Adds a new main button click listener.\n * @param fn - event listener.\n * @returns A function to remove bound listener.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const onClick = withIsSupported(\n  (fn: EventListener<'secondary_button_pressed'>): VoidFunction => on(SECONDARY_BUTTON_PRESSED, fn),\n);\n\n/**\n * Removes the main button click listener.\n * @param fn - an event listener.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const offClick = withIsSupported(\n  (fn: EventListener<'secondary_button_pressed'>): void => {\n    off(SECONDARY_BUTTON_PRESSED, fn);\n  },\n);\n\nfunction onInternalStateChanged(s: State): void {\n  setStorageValue<StorageValue>(STORAGE_KEY, s);\n}\n\nfunction onStateChanged(): void {\n  const s = state();\n\n  // We should not commit changes until the payload is correct. Some version of Telegram will\n  // crash due to the empty value of the text.\n  s.text && postEvent(WEB_APP_SETUP_SECONDARY_BUTTON, {\n    color: s.backgroundColor,\n    has_shine_effect: s.hasShineEffect,\n    is_active: s.isEnabled,\n    is_progress_visible: s.isLoaderVisible,\n    is_visible: s.isVisible,\n    position: s.position,\n    text: s.text,\n    text_color: s.textColor,\n  });\n}\n\n/**\n * Updates the main button state.\n * @param updates - state changes to perform.\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const setParams = withIsMounted((updates: Partial<State>): void => {\n  internalState.set({\n    ...internalState(),\n    ...Object.fromEntries(\n      Object.entries(updates).filter(([, v]) => v !== undefined),\n    ),\n  });\n});\n\n/**\n * Unmounts the component, removing the listener, saving the component state in the local storage.\n *\n * Note that this function does not remove listeners, added via the `onClick` function.\n * @see onClick\n */\nexport function unmount(): void {\n  internalState.unsub(onInternalStateChanged);\n  state.unsub(onStateChanged);\n  isMounted.set(false);\n}\n","import {\n  off,\n  on,\n  getStorageValue,\n  setStorageValue,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { subAndCall } from '@/utils/subAndCall.js';\nimport { createWithIsSupported } from '@/scopes/toolkit/createWithIsSupported.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWithIsMounted } from '@/scopes/toolkit/createWithIsMounted.js';\n\ntype StorageValue = boolean;\n\nconst WEB_APP_SETUP_SETTINGS_BUTTON = 'web_app_setup_settings_button';\nconst SETTINGS_BUTTON_PRESSED = 'settings_button_pressed';\nconst STORAGE_KEY = 'settingsButton';\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * @returns True if the settings button is supported.\n */\nexport const isSupported = createIsSupported(WEB_APP_SETUP_SETTINGS_BUTTON);\n\nconst withIsSupported = createWithIsSupported(isSupported);\nconst withIsMounted = createWithIsMounted(isMounted);\n\n/**\n * Hides the Settings Button.\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const hide = withIsMounted((): void => {\n  isVisible.set(false);\n});\n\n/**\n * True if the component is currently visible.\n */\nexport const isVisible = signal(false);\n\n/**\n * Mounts the component.\n *\n * This function restores the component state and is automatically saving it in the local storage\n * if it changed.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const mount = withIsSupported((): void => {\n  if (!isMounted()) {\n    isVisible.set(isPageReload() && getStorageValue<StorageValue>(STORAGE_KEY) || false);\n    subAndCall(isVisible, onStateChanged);\n    isMounted.set(true);\n  }\n});\n\nfunction onStateChanged() {\n  const value = isVisible();\n  postEvent(WEB_APP_SETUP_SETTINGS_BUTTON, { is_visible: value });\n  setStorageValue<StorageValue>(STORAGE_KEY, value);\n}\n\n/**\n * Add a new Settings Button click listener.\n * @param fn - event listener.\n * @returns A function to remove bound listener.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const onClick = withIsSupported(\n  (fn: EventListener<'settings_button_pressed'>): VoidFunction => on(SETTINGS_BUTTON_PRESSED, fn),\n);\n\n/**\n * Removes the Settings Button click listener.\n * @param fn - an event listener.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const offClick = withIsSupported(\n  (fn: EventListener<'settings_button_pressed'>): void => {\n    off(SETTINGS_BUTTON_PRESSED, fn);\n  },\n);\n\n/**\n * Shows the Settings Button.\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const show = withIsMounted((): void => {\n  isVisible.set(true);\n});\n\n/**\n * Unmounts the component, removing the listener, saving the component state in the local storage.\n *\n * Note that this function does not remove listeners, added via the `onClick` function.\n * @see onClick\n */\nexport function unmount() {\n  isVisible.unsub(onStateChanged);\n  isMounted.set(false);\n}\n","import { isPageReload } from '@telegram-apps/navigation';\nimport { getStorageValue, setStorageValue } from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { subAndCall } from '@/utils/subAndCall.js';\nimport { createWithIsSupported } from '@/scopes/toolkit/createWithIsSupported.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWithIsMounted } from '@/scopes/toolkit/createWithIsMounted.js';\n\ntype StorageValue = boolean;\n\nconst WEB_APP_SETUP_SWIPE_BEHAVIOR = 'web_app_setup_swipe_behavior';\nconst STORAGE_KEY = 'swipeBehavior';\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * @returns True if the Swipe Behavior is supported.\n */\nexport const isSupported = createIsSupported(WEB_APP_SETUP_SWIPE_BEHAVIOR);\n\nconst withIsSupported = createWithIsSupported(isSupported);\nconst withIsMounted = createWithIsMounted(isMounted);\n\n/**\n * Disables vertical swipes.\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const disableVertical = withIsMounted((): void => {\n  isVerticalEnabled.set(false);\n});\n\n/**\n * Enables vertical swipes.\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const enableVertical = withIsMounted((): void => {\n  isVerticalEnabled.set(true);\n});\n\n/**\n * True if vertical swipes are enabled.\n */\nexport const isVerticalEnabled = signal(true);\n\n/**\n * Mounts the component.\n *\n * This function restores the component state and is automatically saving it in the local storage\n * if it changed.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const mount = withIsSupported((): void => {\n  if (!isMounted()) {\n    isVerticalEnabled.set(isPageReload() && getStorageValue<StorageValue>(STORAGE_KEY) || false);\n    subAndCall(isVerticalEnabled, onStateChanged);\n    isMounted.set(true);\n  }\n});\n\nfunction onStateChanged(): void {\n  const value = isVerticalEnabled();\n  postEvent(WEB_APP_SETUP_SWIPE_BEHAVIOR, { allow_vertical_swipe: value });\n  setStorageValue<StorageValue>(STORAGE_KEY, value);\n}\n\n/**\n * Unmounts the component, removing the listener, saving the component state in the local storage.\n */\nexport function unmount(): void {\n  isVerticalEnabled.unsub(onStateChanged);\n  isMounted.set(false);\n}\n","import { computed, type Computed, signal } from '@telegram-apps/signals';\n\nimport type { State } from './types.js';\n\n/* USUAL */\n\n/**\n * Complete component state.\n */\nexport const state = signal<State>({\n  height: 0,\n  width: 0,\n  isExpanded: false,\n  stableHeight: 0,\n});\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * True if CSS variables are currently bound.\n */\nexport const isCssVarsBound = signal(false);\n\n/**\n * True if the component is currently mounting.\n */\nexport const isMounting = signal<boolean>(false);\n\n/**\n * Error occurred while mounting the component.\n */\nexport const mountError = signal<Error | undefined>(undefined);\n\n/* COMPUTED */\n\nfunction createStateComputed<K extends keyof State>(key: K): Computed<State[K] | undefined> {\n  return computed(() => state()[key]);\n}\n\n/**\n * The current height of the **visible area** of the Mini App.\n *\n * The application can display just the top part of the Mini App, with its lower part remaining\n * outside the screen area. From this position, the user can \"pull\" the Mini App to its\n * maximum height, while the bot can do the same by calling `expand` method. As the position of\n * the Mini App changes, the current height value of the visible area will be updated  in real\n * time.\n *\n * Please note that the refresh rate of this value is not sufficient to smoothly follow the\n * lower border of the window. It should not be used to pin interface elements to the bottom\n * of the visible area. It's more appropriate to use the value of the `stableHeight`\n * field for this purpose.\n *\n * @see stableHeight\n */\nexport const height = createStateComputed('height');\n\n/**\n * True if the Mini App is expanded to the maximum available height. Otherwise, if\n * the Mini App occupies part of the screen and can be expanded to the full height using\n * `expand` method.\n * @see expand\n */\nexport const isExpanded = createStateComputed('isExpanded');\n\n/**\n * True if the current viewport height is stable and is not going to change in the next moment.\n */\nexport const isStable = computed(() => {\n  const s = state();\n  return s.height === s.stableHeight;\n});\n\n/**\n * The height of the visible area of the Mini App in its last stable state.\n *\n * The application can display just the top part of the Mini App, with its lower part remaining\n * outside the screen area. From this position, the user can \"pull\" the Mini App to its\n * maximum height, while the application can do the same by calling `expand` method.\n *\n * Unlike the value of `height`, the value of `stableHeight` does not change as the position\n * of the Mini App changes with user gestures or during animations. The value of `stableHeight`\n * will be updated after all gestures and animations are completed and the Mini App reaches its\n * final size.\n *\n * @see height\n */\nexport const stableHeight = createStateComputed('stableHeight');\n\n/**\n * Currently visible area width.\n */\nexport const width = createStateComputed('width');","import type { ExecuteWithOptions, CancelablePromise } from '@telegram-apps/bridge';\n\nimport { request as _request } from '@/scopes/globals.js';\n\nexport interface RequestResult {\n  height: number;\n  isExpanded: boolean;\n  isStable: boolean;\n  width: number;\n}\n\n/**\n * Requests viewport actual information from the Telegram application.\n * @param options - request options.\n */\nexport function request(options?: ExecuteWithOptions): CancelablePromise<RequestResult> {\n  return _request('web_app_request_viewport', 'viewport_changed', options).then(r => ({\n    height: r.height,\n    width: r.width,\n    isExpanded: r.is_expanded,\n    isStable: r.is_state_stable,\n  }));\n}\n\nexport type * from './types.js';\n","import {\n  off,\n  on,\n  retrieveLaunchParams,\n  camelToKebab,\n  getStorageValue,\n  setStorageValue,\n  deleteCssVar,\n  setCssVar,\n  TypedError,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { ERR_ALREADY_CALLED } from '@/errors.js';\nimport { createMountFn } from '@/scopes/createMountFn.js';\nimport { subAndCall } from '@/utils/subAndCall.js';\nimport { withIsMounted } from '@/scopes/toolkit/withIsMounted.js';\n\nimport { type GetCSSVarNameFn, request } from './static.js';\nimport {\n  state,\n  mountError,\n  isMounted,\n  isCssVarsBound,\n  isMounting,\n} from './signals.js';\nimport type { State } from './types.js';\n\ninterface StorageValue {\n  height: number;\n  isExpanded: boolean;\n  stableHeight: number;\n  width: number;\n}\n\n/**\n * Creates CSS variables connected with the current viewport.\n *\n * By default, created CSS variables names are following the pattern \"--tg-theme-{name}\", where\n * {name} is a theme parameters key name converted from camel case to kebab case.\n *\n * Default variables:\n * - `--tg-viewport-height`\n * - `--tg-viewport-width`\n * - `--tg-viewport-stable-height`\n *\n * Variables are being automatically updated if viewport was changed.\n *\n * @param getCSSVarName - function, returning complete CSS variable name for the specified\n * viewport property.\n * @returns Function to stop updating variables.\n * @throws {TypedError} ERR_ALREADY_CALLED\n * @throws {TypedError} ERR_NOT_MOUNTED\n */\nexport const bindCssVars = withIsMounted((getCSSVarName?: GetCSSVarNameFn): VoidFunction => {\n  if (isCssVarsBound()) {\n    throw new TypedError(ERR_ALREADY_CALLED);\n  }\n  getCSSVarName ||= (prop) => `--tg-viewport-${camelToKebab(prop)}`;\n  const props = ['height', 'width', 'stableHeight'] as const;\n\n  function actualize(): void {\n    props.forEach(prop => {\n      setCssVar(getCSSVarName!(prop), `${state()[prop]}px`);\n    });\n  }\n\n  actualize();\n  state.sub(actualize);\n  isCssVarsBound.set(true);\n\n  return () => {\n    props.forEach(deleteCssVar);\n    state.unsub(actualize);\n    isCssVarsBound.set(false);\n  };\n}, isMounted);\n\n/**\n * A method that expands the Mini App to the maximum available height. To find out if the Mini\n * App is expanded to the maximum height, refer to the value of the `isExpanded`.\n * @see isExpanded\n */\nexport function expand(): void {\n  postEvent('web_app_expand');\n}\n\nfunction formatState(state: State): State {\n  return {\n    isExpanded: state.isExpanded,\n    height: truncate(state.height),\n    width: truncate(state.width),\n    stableHeight: truncate(state.stableHeight),\n  };\n}\n\n/**\n * Mounts the component.\n *\n * This function restores the component state and is automatically saving it in the local storage\n * if it changed.\n */\nexport const mount = createMountFn<State>(\n  options => {\n    // Try to restore the state using the storage.\n    const s = isPageReload() && getStorageValue<StorageValue>('viewport');\n    if (s) {\n      return s;\n    }\n\n    // If the platform has a stable viewport, it means we could use the window global object\n    // properties.\n    if ([\n      'macos',\n      'tdesktop',\n      'unigram',\n      'webk',\n      'weba',\n      'web',\n    ].includes(retrieveLaunchParams().platform)) {\n      const w = window;\n      return {\n        isExpanded: true,\n        height: w.innerHeight,\n        width: w.innerWidth,\n        stableHeight: w.innerHeight,\n      };\n    }\n\n    // We were unable to retrieve data locally. In this case, we are sending a request returning\n    // the viewport information.\n    options.timeout ||= 1000;\n    return request(options).then(data => ({\n      height: data.height,\n      isExpanded: data.isExpanded,\n      stableHeight: data.isStable ? data.height : state().stableHeight,\n      width: data.width,\n    }));\n  },\n  result => {\n    on('viewport_changed', onViewportChanged);\n    subAndCall(state, onStateChanged);\n    state.set(formatState(result));\n  },\n  { isMounted, isMounting, mountError },\n);\n\nconst onViewportChanged: EventListener<'viewport_changed'> = (data) => {\n  state.set(formatState({\n    height: data.height,\n    width: data.width,\n    isExpanded: data.is_expanded,\n    stableHeight: data.is_state_stable ? data.height : state().stableHeight,\n  }));\n};\n\nfunction onStateChanged(): void {\n  setStorageValue<StorageValue>('viewport', state());\n}\n\n/**\n * Formats value to make it stay in bounds [0, +Inf).\n * @param value - value to format.\n */\nfunction truncate(value: number): number {\n  return Math.max(value, 0);\n}\n\n/**\n * Unmounts the component, removing the listener, saving the component state in the local storage.\n */\nexport function unmount(): void {\n  off('viewport_changed', onViewportChanged);\n  state.unsub(onStateChanged);\n}\n","import { supports, TypedError, type OpenLinkBrowser } from '@telegram-apps/bridge';\nimport { createSafeURL } from '@telegram-apps/navigation';\n\nimport { $version, postEvent } from '@/scopes/globals.js';\nimport { ERR_INVALID_HOSTNAME } from '@/errors.js';\n\nexport interface OpenLinkOptions {\n  /**\n   * Attempts to use the instant view mode.\n   */\n  tryInstantView?: boolean;\n  /**\n   * A preferred browser to open the link in.\n   */\n  tryBrowser?: OpenLinkBrowser;\n}\n\nconst OPEN_TG_LINK_METHOD = 'web_app_open_tg_link';\n\n/**\n * Opens a link.\n *\n * The Mini App will not be closed.\n *\n * Note that this method can be called only in response to the user\n * interaction with the Mini App interface (e.g. click inside the Mini App or on the main button).\n * @param url - URL to be opened.\n * @param options - additional options.\n */\nexport function openLink(url: string, options?: OpenLinkOptions): void {\n  options ||= {};\n  postEvent('web_app_open_link', {\n    url: createSafeURL(url).toString(),\n    try_browser: options.tryBrowser,\n    try_instant_view: options.tryInstantView,\n  });\n}\n\n/**\n * Opens a Telegram link inside Telegram app. The Mini App will be closed. It expects passing\n * links in full format, with hostname \"t.me\".\n * @param url - URL to be opened.\n * @throws {TypedError} ERR_INVALID_HOSTNAME\n */\nexport function openTelegramLink(url: string): void {\n  const { hostname, pathname, search } = new URL(url, 'https://t.me');\n  if (hostname !== 't.me') {\n    throw new TypedError(ERR_INVALID_HOSTNAME);\n  }\n\n  if (!supports(OPEN_TG_LINK_METHOD, $version())) {\n    window.location.href = url;\n    return;\n  }\n\n  postEvent(OPEN_TG_LINK_METHOD, { path_full: pathname + search });\n}\n\n/**\n * Shares specified URL with the passed to the chats, selected by user. After being called,\n * it closes the mini application.\n *\n * This method uses Telegram's Share Links.\n * @param url - URL to share.\n * @param text - text to append after the URL.\n * @see https://core.telegram.org/api/links#share-links\n * @see https://core.telegram.org/widgets/share#custom-buttons\n */\nexport function shareURL(url: string, text?: string): void {\n  openTelegramLink(\n    `https://t.me/share/url?` + new URLSearchParams({ url, text: text || '' })\n      .toString()\n      // By default, URL search params encode spaces with \"+\".\n      // We are replacing them with \"%20\", because plus symbols are working incorrectly\n      // in Telegram.\n      .replace(/\\+/g, '%20'),\n  );\n}\n","import {\n  TypedError,\n  CancelablePromise,\n  sleep,\n  type PhoneRequestedStatus,\n  type WriteAccessRequestedStatus,\n  type ExecuteWithOptions,\n} from '@telegram-apps/bridge';\nimport { searchParams, object, number, string, date } from '@telegram-apps/transformers';\n\nimport { invokeCustomMethod, request } from '@/scopes/globals.js';\nimport { withIsSupported } from '@/scopes/toolkit/withIsSupported.js';\nimport { ERR_ACCESS_DENIED, ERR_ALREADY_CALLED } from '@/errors.js';\nimport { signal } from '@telegram-apps/signals';\n\n/**\n * Requested contact information.\n */\nexport interface RequestedContact {\n  contact: {\n    userId: number;\n    phoneNumber: string;\n    firstName: string;\n    lastName?: string;\n  };\n  authDate: Date;\n  hash: string;\n}\n\nconst WEB_APP_REQUEST_PHONE = 'web_app_request_phone';\nconst WEB_APP_REQUEST_WRITE_ACCESS = 'web_app_request_write_access';\n\n/**\n * True if phone access is currently being requested.\n */\nexport const isRequestingPhoneAccess = signal(false);\n\n/**\n * True if write access is currently being requested.\n */\nexport const isRequestingWriteAccess = signal(false);\n\n/**\n * Attempts to get requested contact.\n * @param options - execution options.\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n */\nfunction getRequestedContact(options?: ExecuteWithOptions): CancelablePromise<RequestedContact> {\n  options ||= {};\n  return invokeCustomMethod('getRequestedContact', {}, {\n    ...options,\n    timeout: options.timeout || 5000,\n  })\n    .then(\n      searchParams({\n        contact: object({\n          userId: ['user_id', number()],\n          phoneNumber: ['phone_number', string()],\n          firstName: ['first_name', string()],\n          lastName: ['last_name', string(true)],\n        })(),\n        authDate: ['auth_date', date()],\n        hash: string(),\n      })(),\n    );\n}\n\n/**\n * Requests current user contact information. In contrary to requestPhoneAccess, this method\n * returns promise with contact information that rejects in case, user denied access, or request\n * failed.\n * @param options - additional options.\n * @throws {TypedError} ERR_ACCESS_DENIED\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const requestContact = withIsSupported(\n  (options?: ExecuteWithOptions): CancelablePromise<RequestedContact> => {\n    return new CancelablePromise(\n      async (res, _, abortSignal) => {\n        const asyncOptions = {\n          postEvent: (options || {}).postEvent,\n          abortSignal,\n        };\n\n        // First of all, let's try to get the requested contact.\n        // Probably, we already requested it before.\n        try {\n          return res(await getRequestedContact(asyncOptions));\n        } catch {\n        }\n\n        // Then, request access to the user's phone.\n        const status = await requestPhoneAccess(asyncOptions);\n        if (status !== 'sent') {\n          throw new TypedError(ERR_ACCESS_DENIED);\n        }\n\n        // Time to wait before executing the next request.\n        let sleepTime = 50;\n\n        // We are trying to retrieve the requested contact until the deadline was reached.\n        while (!abortSignal.aborted) {\n          try {\n            return res(await getRequestedContact(asyncOptions));\n          } catch {\n          }\n\n          // Sleep for some time.\n          await sleep(sleepTime);\n\n          // Increase the sleep time not to kill the backend service.\n          sleepTime += 50;\n        }\n      }, options,\n    );\n  },\n  WEB_APP_REQUEST_PHONE,\n);\n\n/**\n * Requests current user phone access. Method returns promise, which resolves\n * status of the request. In case, user accepted the request, Mini App bot will receive\n * the according notification.\n *\n * To obtain the retrieved information instead, utilize the `requestContact` method.\n * @param options - additional options.\n * @see requestContact\n * @throws {TypedError} ERR_ALREADY_CALLED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const requestPhoneAccess = withIsSupported(\n  (options?: ExecuteWithOptions): Promise<PhoneRequestedStatus> => {\n    if (isRequestingPhoneAccess()) {\n      throw new TypedError(ERR_ALREADY_CALLED);\n    }\n    isRequestingPhoneAccess.set(true);\n\n    return request(WEB_APP_REQUEST_PHONE, 'phone_requested', options)\n      .then(r => r.status)\n      .finally(() => {\n        isRequestingPhoneAccess.set(false);\n      });\n  }, WEB_APP_REQUEST_PHONE,\n);\n\n/**\n * Requests write message access to the current user.\n * @param options - additional options.\n * @throws {TypedError} ERR_ALREADY_CALLED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const requestWriteAccess = withIsSupported(\n  (options?: ExecuteWithOptions): Promise<WriteAccessRequestedStatus> => {\n    if (isRequestingWriteAccess()) {\n      throw new TypedError(ERR_ALREADY_CALLED);\n    }\n    isRequestingWriteAccess.set(true);\n\n    return request(WEB_APP_REQUEST_WRITE_ACCESS, 'write_access_requested', options)\n      .then(r => r.status)\n      .finally(() => {\n        isRequestingWriteAccess.set(false);\n      });\n  }, WEB_APP_REQUEST_WRITE_ACCESS,\n);\n","import {\n  captureSameReq,\n  retrieveLaunchParams,\n  CancelablePromise,\n  TypedError,\n  type ExecuteWithOptions,\n  type SwitchInlineQueryChatType,\n  type ExecuteWithPostEvent, supports,\n} from '@telegram-apps/bridge';\n\nimport { postEvent, createRequestId, request, $version } from '@/scopes/globals.js';\nimport { withIsSupported } from '@/scopes/toolkit/withIsSupported.js';\nimport { ERR_DATA_INVALID_SIZE } from '@/errors.js';\n\nconst WEB_APP_READ_TEXT_FROM_CLIPBOARD = 'web_app_read_text_from_clipboard';\nconst WEB_APP_SWITCH_INLINE_QUERY = 'web_app_switch_inline_query';\nconst WEB_APP_SHARE_TO_STORY = 'web_app_share_to_story';\n\nexport interface ShareStoryOptions extends ExecuteWithPostEvent {\n  /**\n   * The caption to be added to the media.\n   * 0-200 characters for regular users and 0-2048 characters for premium subscribers.\n   * @see https://telegram.org/faq_premium#telegram-premium\n   */\n  text?: string;\n  /**\n   * An object that describes a widget link to be included in the story.\n   * Note that only premium subscribers can post stories with links.\n   * @see https://telegram.org/faq_premium#telegram-premium\n   */\n  widgetLink?: {\n    /**\n     * The URL to be included in the story.\n     */\n    url: string;\n    /**\n     * The name to be displayed for the widget link, 0-48 characters.\n     */\n    name?: string;\n  };\n}\n\n/**\n * Reads a text from the clipboard and returns a string or null. null is returned\n * in cases:\n * - A value in the clipboard is not a text.\n * - Access to the clipboard is not granted.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const readTextFromClipboard = withIsSupported(\n  (options?: ExecuteWithOptions): CancelablePromise<string | null> => {\n    const reqId = createRequestId();\n\n    return request(WEB_APP_READ_TEXT_FROM_CLIPBOARD, 'clipboard_text_received', {\n      ...options,\n      params: { req_id: reqId },\n      capture: captureSameReq(reqId),\n    }).then(({ data = null }) => data);\n  }, WEB_APP_READ_TEXT_FROM_CLIPBOARD,\n);\n\n/**\n * A method used to send data to the bot.\n *\n * When this method called, a service message sent to the bot containing the data of the length\n * up to 4096 bytes, and the Mini App closed.\n *\n * See the field `web_app_data` in the class [Message](https://core.telegram.org/bots/api#message).\n *\n * This method is only available for Mini Apps launched via a Keyboard button.\n * @param data - data to send to bot.\n * @throws {TypedError} ERR_DATA_INVALID_SIZE\n */\nexport function sendData(data: string): void {\n  const { size } = new Blob([data]);\n  if (!size || size > 4096) {\n    throw new TypedError(ERR_DATA_INVALID_SIZE);\n  }\n  postEvent('web_app_data_send', { data });\n}\n\n/**\n * A method that opens the native story editor.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const shareStory = withIsSupported(\n  (mediaUrl: string, options?: ShareStoryOptions) => {\n    options ||= {};\n    (options.postEvent || postEvent)(WEB_APP_SHARE_TO_STORY, {\n      text: options.text,\n      media_url: mediaUrl,\n      widget_link: options.widgetLink,\n    });\n  }, WEB_APP_SHARE_TO_STORY,\n);\n\n/**\n * Inserts the bot's username and the specified inline query in the current chat's input field.\n * Query may be empty, in which case only the bot's username will be inserted. The client prompts\n * the user to choose a specific chat, then opens that chat and inserts the bot's username and\n * the specified inline query in the input field.\n * @param query - text which should be inserted in the input after the current bot name. Max\n * length is 256 symbols.\n * @param chatTypes - List of chat types which could be chosen to send the message. Could be\n * empty list.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n */\nexport const switchInlineQuery = withIsSupported(\n  (query: string, chatTypes?: SwitchInlineQueryChatType[]) => {\n    postEvent(WEB_APP_SWITCH_INLINE_QUERY, {\n      query: query,\n      chat_types: chatTypes || [],\n    });\n  },\n  () => {\n    return supports(WEB_APP_SWITCH_INLINE_QUERY, $version()) && !!retrieveLaunchParams().botInline;\n  }\n);\n","/**\n * @returns True, if current environment is server.\n */\nexport function isSSR(): boolean {\n  return typeof window === 'undefined';\n}\n","import {\n  createCbCollector,\n  defineEventHandlers,\n  on,\n  removeEventHandlers,\n} from '@telegram-apps/bridge';\n\nimport { postEvent, configure, type ConfigureOptions } from '@/scopes/globals.js';\n\nexport interface InitOptions extends ConfigureOptions {\n  /**\n   * True if SDK should accept styles sent from the Telegram application.\n   * @default true\n   */\n  acceptCustomStyles?: boolean;\n}\n\n/**\n * Initializes the SDK allowing it to properly handle events, sent from the native Telegram\n * application.\n * @param options - function options.\n * @returns A function, to perform a cleanup.\n */\nexport function init(options?: InitOptions): VoidFunction {\n  // Configure the package global dependencies.\n  configure(options);\n\n  // Define event handlers, so we could receive the events from the Telegram application.\n  defineEventHandlers();\n\n  const [addCleanup, cleanup] = createCbCollector(\n    on('reload_iframe', () => {\n      postEvent('iframe_will_reload');\n      window.location.reload();\n    }),\n    removeEventHandlers,\n  );\n\n  const { acceptCustomStyles = true } = options || {};\n  if (acceptCustomStyles) {\n    const style = document.createElement('style');\n    style.id = 'telegram-custom-styles';\n    document.head.appendChild(style);\n\n    addCleanup(\n      on('set_custom_style', html => {\n        // It is safe to use innerHTML here as long as style tag has a special behavior related\n        // to the specified content.\n        // In case any script will be passed here, it will not be executed, so XSS is not possible.\n        style.innerHTML = html;\n      }),\n      () => {\n        document.head.removeChild(style);\n      },\n    );\n  }\n\n  // Notify Telegram that the application is ready.\n  //\n  // This will result in sending style tag html content from the Telegram web application.\n  // We should call this method also to start receiving \"reload_iframe\" events from the Telegram\n  // application.\n  //\n  // It really has no effect outside non-Telegram web environment.\n  postEvent('iframe_ready', { reload_supported: true });\n\n  return cleanup;\n}"],"names":["i","r","a","b","E","R","S","w","h","y","n","o","c","p","d","s","l","f","A","u","g","D","P","m","U","N","O","W","_","T","V","j","I","B","classNames","values","value","isRecord","entry","mergeClassNames","partials","acc","partial","key","className","v","H","t","G","e","we","he","de","me","K","Z","$","Ee","z","ye","ve","Pe","Re","Te","Se","X","Ae","$e","Y","Q","Ne","Ce","ee","De","Ue","je","te","x","L","xe","ne","re","oe","M","ot","st","at","q","ge","F","it","se","ke","Le","ct","We","ft","_t","Oe","Ie","ae","Me","qe","Fe","C","ie","ce","Je","Be","He","Ge","Ke","Ve","ue","pe","fe","_e","Ze","ze","Xe","Ye","le","be","Qe","lt","k","et","bt","gt","wt","ht","dt","mt","tt","J","nt","Et","yt","$createRequestId","signal","requestId","$postEvent","_postEvent","$version","configure","options","optionsPostEvent","retrieveLaunchParams","createPostEvent","createRequestId","invokeCustomMethod","method","params","_invokeCustomMethod","postEvent","request","eventOrEvents","_request","ERR_POPUP_INVALID_PARAMS","ERR_INVALID_HOSTNAME","ERR_INVALID_SLUG","ERR_DATA_INVALID_SIZE","ERR_ACCESS_DENIED","ERR_ALREADY_CALLED","ERR_NOT_AVAILABLE","ERR_NOT_SUPPORTED","ERR_NOT_MOUNTED","withIsSupported","fn","arg2","isSupported","supports","args","TypedError","createWithIsSupported","isSupportedOrMethod","subAndCall","createIsSupported","computed","withIsMounted","isMounted","createWithIsMounted","WEB_APP_SETUP_BACK_BUTTON","BACK_BUTTON_PRESSED","STORAGE_KEY","hide","isVisible","mount","isPageReload","getStorageValue","onStateChanged","setStorageValue","onClick","on","offClick","off","show","unmount","createMountFn","onMounted","isMounting","mountError","mountOptions","CancelablePromise","abortSignal","tuple","batch","error","state","isAuthenticating","isRequestingAccess","eventToState","event","WEB_APP_BIOMETRY_GET_INFO","requestBiometry","WEB_APP_BIOMETRY_REQUEST_AUTH","WEB_APP_BIOMETRY_REQUEST_ACCESS","WEB_APP_BIOMETRY_OPEN_SETTINGS","WEB_APP_BIOMETRY_UPDATE_TOKEN","BIOMETRY_INFO_RECEIVED","authenticate","response","token","openSettings","requestAccess","info","result","onBiometryInfoReceived","updateToken","disableConfirmation","isConfirmationEnabled","enableConfirmation","WEB_APP_INVOKE_CUSTOM_METHOD","deleteItem","keyOrKeys","keys","_getItem","data","object","string","getItem","getKeys","array","setItem","WEB_APP_TRIGGER_HAPTIC_FEEDBACK","impactOccurred","style","notificationOccurred","type","selectionChanged","fromState","authDate","canSendAfter","canSendAfterDate","authDateValue","canSendAfterValue","chat","chatType","chatInstance","hash","queryId","raw","receiver","restore","lp","startParam","user","parseInitData","initData","WEB_APP_OPEN_INVOICE","isOpened","_open","urlOrSlug","optionsOrType","slug","hostname","pathname","match","open","isColorDark","color","rgb","toRGB","modifier","idx","dec","isCssVarsBound","accentTextColor","backgroundColor","buttonColor","buttonTextColor","bottomBarBgColor","destructiveTextColor","headerBackgroundColor","hintColor","isDark","bgColor","linkColor","secondaryBackgroundColor","sectionBackgroundColor","sectionHeaderTextColor","sectionSeparatorColor","subtitleTextColor","textColor","internalState","hasShineEffect","isEnabled","isLoaderVisible","text","WEB_APP_SETUP_MAIN_BUTTON","MAIN_BUTTON_PRESSED","prev","onInternalStateChanged","setParams","updates","parseThemeParams","themeParams","THEME_CHANGED_EVENT","bindCssVars","getCSSVarName","prop","camelToKebab","forEachEntry","actualize","setCssVar","deleteCssVar","onThemeChanged","withSupports","schema","sup","param","rgbBasedOn","isRGB","themeBgColor","themeSecondaryBgColor","backgroundColorRGB","bottomBarColor","bottomBarColorRGB","themeBottomBarBgColor","headerColor","headerColorRGB","WEB_APP_SET_BACKGROUND_COLOR","WEB_APP_SET_BOTTOM_BAR_COLOR","WEB_APP_SET_HEADER_COLOR","withComponentSupported","addCleanup","cleanup","createCbCollector","bind","cssVar","update","close","returnBack","tpMount","setBackgroundColor","onBgColorChanged","setBottomBarColor","onBottomBarBgColorChanged","setHeaderColor","onHeaderColorChanged","saveState","ready","prepareParams","message","title","buttons","id","WEB_APP_OPEN_POPUP","buttonId","WEB_APP_CLOSE_SCAN_QR_POPUP","WEB_APP_OPEN_SCAN_QR_POPUP","SCAN_QR_POPUP_CLOSED","QR_TEXT_RECEIVED","onCaptured","capture","promise","EnhancedPromise","position","WEB_APP_SETUP_SECONDARY_BUTTON","SECONDARY_BUTTON_PRESSED","WEB_APP_SETUP_SETTINGS_BUTTON","SETTINGS_BUTTON_PRESSED","WEB_APP_SETUP_SWIPE_BEHAVIOR","disableVertical","isVerticalEnabled","enableVertical","createStateComputed","height","isExpanded","isStable","stableHeight","width","props","expand","formatState","truncate","onViewportChanged","OPEN_TG_LINK_METHOD","openLink","url","createSafeURL","openTelegramLink","search","shareURL","WEB_APP_REQUEST_PHONE","WEB_APP_REQUEST_WRITE_ACCESS","isRequestingPhoneAccess","isRequestingWriteAccess","getRequestedContact","searchParams","number","date","requestContact","res","asyncOptions","requestPhoneAccess","sleepTime","sleep","requestWriteAccess","WEB_APP_READ_TEXT_FROM_CLIPBOARD","WEB_APP_SWITCH_INLINE_QUERY","WEB_APP_SHARE_TO_STORY","readTextFromClipboard","reqId","captureSameReq","sendData","size","shareStory","mediaUrl","switchInlineQuery","query","chatTypes","isSSR","init","defineEventHandlers","removeEventHandlers","acceptCustomStyles","html"],"mappings":"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"}